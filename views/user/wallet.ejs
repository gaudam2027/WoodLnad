<link rel="stylesheet" href="./css/profile.css">
<%- include('../../views/partials/user/header') %>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" />

<style>
  .swal2-popup {
    border-radius: .7rem !important;
  }
  .swal2-title {
    font-size: 20px !important;
  }

  #toaster {
    position: fixed;
    top: 20px;
    right: 20px;
    padding: 12px 20px;
    border-radius: 8px;
    font-size: 14px;
    z-index: 9999;
    opacity: 0;
    transform: translateY(-20px);
    transition: all 0.3s ease;
    color: white;
  }

  #toaster.show {
    opacity: 1;
    transform: translateY(0);
  }

  #toaster.success {
    background-color: #38a169;
  }

  #toaster.error {
    background-color: #e53e3e;
  }

  /* Fixed Mobile Menu Button */
  #mobileMenuToggle {
    position: fixed;
    left: 20px;
    top: 50%;
    transform: translateY(-50%);
    width: 60px;
    height: 60px;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border: 2px solid rgba(0, 0, 0, 0.1);
    border-radius: 50%;
    display: none;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 1001;
    transition: all 0.3s ease;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  }

  /* Show only on mobile screens */
  @media (max-width: 767px) {
    #mobileMenuToggle {
      display: flex !important;
    }
  }

  #mobileMenuToggle:hover {
    background: rgba(255, 255, 255, 1);
    border-color: rgba(0, 0, 0, 0.2);
    box-shadow: 0 6px 25px rgba(0, 0, 0, 0.15);
    transform: translateY(-50%) scale(1.05);
  }

  #mobileMenuToggle i {
    color: #374151;
    font-size: 1.8rem;
    transition: all 0.3s ease;
  }

  /* Fixed Sidebar Overlay */
  .sidebar-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(4px);
    z-index: 1000;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
  }

  .sidebar-overlay.show {
    opacity: 1;
    visibility: visible;
  }

  .mobile-sidebar {
    position: fixed;
    top: 0;
    left: 0;
    width: 320px;
    height: 100%;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(20px);
    transform: translateX(-100%);
    transition: transform 0.3s ease-in-out;
    z-index: 1001;
    border-radius: 0 20px 20px 0;
    overflow-y: auto;
  }

  .mobile-sidebar.open {
    transform: translateX(0);
  }

  /* Profile container and other styles */
  .profile-container {
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
    min-height: 100vh;
    padding-top: 80px;
  }

  .glass-card {
    background: rgba(255, 255, 255, 0.25);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.3);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
  }

  .profile-img {
    width: 120px;
    height: 120px;
    border-radius: 50%;
    object-fit: cover;
    border: 4px solid rgba(255, 255, 255, 0.5);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
  }

  .menu-item {
    transition: all 0.3s ease;
    border-radius: 12px;
    margin-bottom: 8px;
  }

  .menu-item:hover {
    background: rgba(55, 65, 81, 0.1);
    transform: translateX(8px);
  }

  .menu-item.active {
    background: linear-gradient(135deg, #374151 0%, #4b5563 100%);
    color: white;
    box-shadow: 0 4px 15px rgba(55, 65, 81, 0.3);
  }

  /* Enhanced Wallet Design */
  .premium-wallet-card {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    position: relative;
    overflow: hidden;
    border-radius: 24px;
    box-shadow: 0 25px 60px rgba(102, 126, 234, 0.4);
    transform: perspective(1000px) rotateX(5deg);
    transition: all 0.4s ease;
  }

  .premium-wallet-card:hover {
    transform: perspective(1000px) rotateX(0deg) translateY(-10px);
    box-shadow: 0 35px 80px rgba(102, 126, 234, 0.5);
  }

  .premium-wallet-card::before {
    content: '';
    position: absolute;
    top: -50%;
    right: -50%;
    width: 200%;
    height: 200%;
    background: conic-gradient(transparent, rgba(255, 255, 255, 0.3), transparent);
    animation: rotate 4s linear infinite;
  }

  .premium-wallet-card::after {
    content: '';
    position: absolute;
    inset: 3px;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border-radius: 21px;
    z-index: 1;
  }

  @keyframes rotate {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  .wallet-content {
    position: relative;
    z-index: 2;
    padding: 2rem;
    color: white;
  }

  .balance-display {
    font-size: 3.5rem;
    font-weight: 900;
    background: linear-gradient(45deg, #ffffff, #e2e8f0, #ffffff);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    filter: drop-shadow(0 4px 8px rgba(0,0,0,0.3));
    animation: shimmer 3s ease-in-out infinite;
  }

  @keyframes shimmer {
    0%, 100% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
  }

  .modern-stat-card {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.5);
    border-radius: 20px;
    padding: 1.5rem;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
  }

  .modern-stat-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(102, 126, 234, 0.1), transparent);
    transition: left 0.5s;
  }

  .modern-stat-card:hover::before {
    left: 100%;
  }

  .modern-stat-card:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 0 20px 40px rgba(102, 126, 234, 0.2);
    border-color: rgba(102, 126, 234, 0.3);
  }

  .premium-action-card {
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(15px);
    border: 1px solid rgba(255, 255, 255, 0.4);
    border-radius: 16px;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  .premium-action-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, transparent, rgba(102, 126, 234, 0.1), transparent);
    opacity: 0;
    transition: opacity 0.3s;
  }

  .premium-action-card:hover::before {
    opacity: 1;
  }

  .premium-action-card:hover {
    transform: translateY(-6px);
    box-shadow: 0 15px 35px rgba(102, 126, 234, 0.25);
    border-color: rgba(102, 126, 234, 0.4);
  }

  .transaction-preview-card {
    background: rgba(255, 255, 255, 0.8);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 16px;
    padding: 1rem;
    margin-bottom: 0.75rem;
    transition: all 0.3s ease;
    border-left: 4px solid transparent;
  }

  .transaction-preview-card:hover {
    background: rgba(255, 255, 255, 0.95);
    transform: translateX(8px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
  }

  .transaction-credit {
    border-left-color: #10b981;
  }

  .transaction-debit {
    border-left-color: #ef4444;
  }

  .quick-stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1.5rem;
  }

  .feature-icon-gradient {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    width: 3.5rem;
    height: 3.5rem;
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto 1rem;
    box-shadow: 0 8px 20px rgba(102, 126, 234, 0.3);
  }

  .recent-activity-header {
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
    border-radius: 12px;
    padding: 1rem;
    margin-bottom: 1rem;
  }

  .modal-overlay {
    backdrop-filter: blur(12px);
    background: rgba(0, 0, 0, 0.6);
  }

  .modal-content {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(30px);
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 20px;
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
    animation: modalSlideIn 0.3s ease;
  }

  @keyframes modalSlideIn {
    from {
      opacity: 0;
      transform: scale(0.95) translateY(-10px);
    }
    to {
      opacity: 1;
      transform: scale(1) translateY(0);
    }
  }

  .activity-dot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
  }

  /* Responsive breakpoints */
  @media (max-width: 768px) {
    .profile-container {
      padding-top: 60px;
    }
    
    .profile-img {
      width: 100px;
      height: 100px;
    }

    #mobileMenuToggle {
      left: 15px;
      width: 50px;
      height: 50px;
    }

    #mobileMenuToggle i {
      font-size: 1.5rem;
    }

    .mobile-sidebar {
      width: 280px;
    }

    .premium-wallet-card {
      transform: none;
    }

    .balance-display {
      font-size: 2.5rem;
    }

    .quick-stats-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (max-width: 480px) {
    #mobileMenuToggle {
      left: 10px;
      width: 45px;
      height: 45px;
    }

    #mobileMenuToggle i {
      font-size: 1.2rem;
    }

    .mobile-sidebar {
      width: 260px;
    }
  }
</style>

<div class="profile-container">
  <div class="container mx-auto px-4 py-6">
    
    <!-- Fixed Mobile Menu Toggle -->
    <button id="mobileMenuToggle">
      <i class="fas fa-chevron-right"></i>
    </button>

    <!-- Mobile Header -->
    <div class="block sm:hidden text-center mb-8">
      <h1 class="text-2xl font-bold text-gray-800 mb-2" style="font-family: 'Raleway', sans-serif;">My Wallet</h1>
      <p class="text-gray-600">Manage your digital wallet</p>
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-4 gap-6">
      
      <!-- Desktop Sidebar - UNCHANGED -->
      <div class="hidden lg:block">
        <div class="glass-card p-6 rounded-2xl sticky top-6">
          <div class="text-center mb-6">
            <img src="<%= user.profileImage || '/images/default-avatar.png' %>" alt="Profile" class="profile-img mx-auto mb-4">
            <h3 class="text-xl font-bold text-gray-800 mb-1" style="font-family: 'Raleway', sans-serif;"><%= user.name %></h3>
            <p class="text-sm text-gray-600">Member since <%= new Date(user.createdOn).getFullYear() %></p>
          </div>
          
          <nav class="space-y-2">
            <a href="/profile" class="menu-item flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-user mr-3"></i>Profile
            </a>
            <a href="/order" class="menu-item flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-shopping-bag mr-3"></i>My Orders
            </a>
            <a href="/address" class="menu-item flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-map-marker-alt mr-3"></i>Addresses
            </a>
            <a href="/wishlist" class="menu-item flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-heart mr-3"></i>Wishlist
            </a>
            <a href="/wallet" class="menu-item active flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-wallet mr-3"></i>Wallet
            </a>
          </nav>
          
          <button onclick="logout()" class="w-full mt-6 bg-gray-800 text-white py-3 px-4 rounded-xl hover:bg-gray-700 transition font-medium flex items-center justify-center">
            <i class="fas fa-sign-out-alt mr-2"></i>Logout
          </button>
        </div>
      </div>

      <!-- Fixed Mobile Sidebar Overlay - UNCHANGED -->
      <div id="sidebarOverlay" class="sidebar-overlay">
        <div id="mobileSidebar" class="mobile-sidebar">
          <div class="flex items-center justify-between mb-6 p-6">
            <h2 class="text-xl font-bold text-gray-800" style="font-family: 'Raleway', sans-serif;">Menu</h2>
            <button id="closeSidebar" class="p-2 hover:bg-gray-100 rounded-lg transition-colors">
              <i class="fas fa-times text-gray-600 text-xl"></i>
            </button>
          </div>

          <div class="text-center mb-6 px-6">
            <img src="<%= user.profileImage || '/images/default-avatar.png' %>" alt="Profile" class="profile-img mx-auto mb-4">
            <h3 class="text-lg font-bold text-gray-800 mb-1"><%= user.name %></h3>
            <p class="text-sm text-gray-600">Member since <%= new Date(user.createdOn).getFullYear() %></p>
          </div>
          
          <nav class="space-y-3 px-6">
            <a href="/profile" class="menu-item flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-user mr-3"></i>Profile
            </a>
            <a href="/order" class="menu-item flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-shopping-bag mr-3"></i>My Orders
            </a>
            <a href="/address" class="menu-item flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-map-marker-alt mr-3"></i>Addresses
            </a>
            <a href="/wishlist" class="menu-item flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-heart mr-3"></i>Wishlist
            </a>
            <a href="/wallet" class="menu-item active flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-wallet mr-3"></i>Wallet
            </a>
          </nav>
          
          <div class="px-6 mt-8">
            <button onclick="logout()" class="w-full bg-gray-800 text-white py-3 px-4 rounded-xl hover:bg-gray-700 transition font-medium flex items-center justify-center">
              <i class="fas fa-sign-out-alt mr-2"></i>Logout
            </button>
          </div>
        </div>
      </div>

      <!-- ENHANCED RIGHT SIDE CONTENT -->
      <div class="lg:col-span-3 space-y-8">
        
        <!-- Premium Wallet Card -->
        <div class="premium-wallet-card">
          <div class="wallet-content">
            <div class="flex justify-between items-start mb-6">
              <div class="flex items-center space-x-3">
                <div class="w-12 h-12 bg-white bg-opacity-20 rounded-xl flex items-center justify-center backdrop-blur-sm">
                  <i class="fas fa-wallet text-xl"></i>
                </div>
                <div>
                  <h2 class="text-lg font-semibold opacity-90" style="font-family: 'Raleway', sans-serif;">Premium Wallet</h2>
                  <p class="text-sm opacity-75">Secure Digital Payments</p>
                </div>
              </div>
              <div class="text-right">
                <p class="text-xs opacity-75 mb-1">Wallet ID</p>
                <p class="text-sm font-mono bg-white bg-opacity-20 px-3 py-1 rounded-lg backdrop-blur-sm">
                  #<%= wallet ? wallet._id.toString().slice(-8).toUpperCase() : 'WLT00001' %>
                </p>
              </div>
            </div>
            
            <div class="mb-6">
              <p class="text-sm opacity-90 mb-2">Available Balance</p>
              <div class="balance-display">₹<%= wallet ? wallet.balance.toFixed(2) : '0.00' %></div>
            </div>

            <%
              const totalTransactions = wallet && wallet.transactions ? wallet.transactions.length : 0;
            %>
            <div class="flex items-center justify-between">
              <div class="flex space-x-6">
                <div class="flex items-center space-x-2">
                  <i class="fas fa-shield-check text-green-300"></i>
                  <span class="text-sm opacity-90">Secured</span>
                </div>
                <div class="flex items-center space-x-2">
                  <i class="fas fa-history"></i>
                  <span class="text-sm opacity-90"><%= totalTransactions %> transactions</span>
                </div>
              </div>
              <button onclick="openAddMoneyModal()" class="bg-white bg-opacity-20 hover:bg-opacity-30 px-6 py-2 rounded-xl transition-all duration-300 backdrop-blur-sm font-semibold">
                <i class="fas fa-plus mr-2"></i>Add Money
              </button>
            </div>
          </div>
        </div>

        <!-- Quick Stats Section -->
        <div class="quick-stats-grid">
          <%
            let totalCredit = 0;
            let totalDebit = 0;
            let thisMonthTransactions = 0;
            let lastMonthSpent = 0;
            
            if (wallet && wallet.transactions) {
              const currentMonth = new Date().getMonth();
              const currentYear = new Date().getFullYear();
              const lastMonth = currentMonth === 0 ? 11 : currentMonth - 1;
              const lastMonthYear = currentMonth === 0 ? currentYear - 1 : currentYear;
              
              wallet.transactions.forEach(transaction => {
                if (transaction.type === 'credit') {
                  totalCredit += transaction.amount;
                } else if (transaction.type === 'debit') {
                  totalDebit += transaction.amount;
                }
                
                const transactionDate = new Date(transaction.date);
                if (transactionDate.getMonth() === currentMonth && transactionDate.getFullYear() === currentYear) {
                  if (transaction.type === 'debit') {
                    thisMonthTransactions += transaction.amount;
                  }
                }
                
                if (transactionDate.getMonth() === lastMonth && transactionDate.getFullYear() === lastMonthYear) {
                  if (transaction.type === 'debit') {
                    lastMonthSpent += transaction.amount;
                  }
                }
              });
            }
            
            const spendingChange = lastMonthSpent > 0 ? ((thisMonthTransactions - lastMonthSpent) / lastMonthSpent * 100) : 0;
          %>
          
          <div class="modern-stat-card">
            <div class="flex items-center justify-between mb-4">
              <div class="w-14 h-14 bg-green-100 rounded-2xl flex items-center justify-center">
                <i class="fas fa-arrow-up text-green-600 text-xl"></i>
              </div>
              <div class="text-right">
                <p class="text-sm text-gray-500">Money Added</p>
                <p class="text-2xl font-bold text-green-600">₹<%= totalCredit.toFixed(0) %></p>
              </div>
            </div>
            <div class="h-2 bg-green-100 rounded-full">
              <div class="h-full bg-green-500 rounded-full" style="width: 75%"></div>
            </div>
          </div>

          <div class="modern-stat-card">
            <div class="flex items-center justify-between mb-4">
              <div class="w-14 h-14 bg-red-100 rounded-2xl flex items-center justify-center">
                <i class="fas fa-arrow-down text-red-600 text-xl"></i>
              </div>
              <div class="text-right">
                <p class="text-sm text-gray-500">Total Spent</p>
                <p class="text-2xl font-bold text-red-600">₹<%= totalDebit.toFixed(0) %></p>
              </div>
            </div>
            <div class="h-2 bg-red-100 rounded-full">
              <div class="h-full bg-red-500 rounded-full" style="width: 60%"></div>
            </div>
          </div>

          <div class="modern-stat-card">
            <div class="flex items-center justify-between mb-4">
              <div class="w-14 h-14 bg-blue-100 rounded-2xl flex items-center justify-center">
                <i class="fas fa-calendar-alt text-blue-600 text-xl"></i>
              </div>
              <div class="text-right">
                <p class="text-sm text-gray-500">This Month</p>
                <p class="text-2xl font-bold text-blue-600">₹<%= thisMonthTransactions.toFixed(0) %></p>
                <span class="text-xs px-2 py-1 rounded-full <%= spendingChange >= 0 ? 'bg-red-100 text-red-600' : 'bg-green-100 text-green-600' %>">
                  <%= spendingChange >= 0 ? '+' : '' %><%= spendingChange.toFixed(1) %>%
                </span>
              </div>
            </div>
            <div class="h-2 bg-blue-100 rounded-full">
              <div class="h-full bg-blue-500 rounded-full" style="width: <%= Math.min((thisMonthTransactions / Math.max(totalCredit, 1000)) * 100, 100) %>%"></div>
            </div>
          </div>

          <div class="modern-stat-card">
            <div class="flex items-center justify-between mb-4">
              <div class="w-14 h-14 bg-purple-100 rounded-2xl flex items-center justify-center">
                <i class="fas fa-chart-line text-purple-600 text-xl"></i>
              </div>
              <div class="text-right">
                <p class="text-sm text-gray-500">Avg Transaction</p>
                <p class="text-2xl font-bold text-purple-600">₹<%= totalTransactions > 0 ? (totalDebit / totalTransactions).toFixed(0) : '0' %></p>
              </div>
            </div>
            <div class="h-2 bg-purple-100 rounded-full">
              <div class="h-full bg-purple-500 rounded-full" style="width: 45%"></div>
            </div>
          </div>
        </div>

        <!-- Quick Actions Grid -->
        <div class="glass-card p-8 rounded-2xl">
          <h3 class="text-2xl font-bold text-gray-800 mb-6" style="font-family: 'Raleway', sans-serif;">Quick Actions</h3>
          <div class="grid grid-cols-2 md:grid-cols-4 gap-6">
            <button onclick="openAddMoneyModal()" class="premium-action-card p-6 text-center group">
              <div class="feature-icon-gradient group-hover:scale-110 transition-transform duration-300">
                <i class="fas fa-plus text-xl"></i>
              </div>
              <p class="font-semibold text-gray-800">Add Money</p>
              <p class="text-xs text-gray-500 mt-1">Top up wallet</p>
            </button>
            
            <button onclick="openTransactionHistoryModal()" class="premium-action-card p-6 text-center group">
              <div class="feature-icon-gradient group-hover:scale-110 transition-transform duration-300">
                <i class="fas fa-history text-xl"></i>
              </div>
              <p class="font-semibold text-gray-800">History</p>
              <p class="text-xs text-gray-500 mt-1">View transactions</p>
            </button>
            
            <button onclick="openSpendingAnalyticsModal()" class="premium-action-card p-6 text-center group">
              <div class="feature-icon-gradient group-hover:scale-110 transition-transform duration-300">
                <i class="fas fa-chart-bar text-xl"></i>
              </div>
              <p class="font-semibold text-gray-800">Analytics</p>
              <p class="text-xs text-gray-500 mt-1">Spending insights</p>
            </button>
            
            <button onclick="exportTransactions()" class="premium-action-card p-6 text-center group">
              <div class="feature-icon-gradient group-hover:scale-110 transition-transform duration-300">
                <i class="fas fa-download text-xl"></i>
              </div>
              <p class="font-semibold text-gray-800">Export</p>
              <p class="text-xs text-gray-500 mt-1">Download CSV</p>
            </button>
          </div>
        </div>

        <!-- Recent Transactions Preview -->
        <div class="glass-card p-8 rounded-2xl">
          <div class="recent-activity-header">
            <div class="flex items-center justify-between">
              <div class="flex items-center space-x-3">
                <i class="fas fa-clock text-gray-600"></i>
                <h3 class="text-xl font-bold text-gray-800" style="font-family: 'Raleway', sans-serif;">Recent Activity</h3>
              </div>
              <button onclick="openTransactionHistoryModal()" class="text-blue-600 hover:text-blue-700 font-semibold text-sm">
                View All <i class="fas fa-arrow-right ml-1"></i>
              </button>
            </div>
          </div>

          <% if (wallet && wallet.transactions && wallet.transactions.length > 0) { %>
            <%
              const recentTransactions = wallet.transactions.sort((a, b) => new Date(b.date) - new Date(a.date)).slice(0, 5);
            %>
            <div class="space-y-3">
              <% recentTransactions.forEach((transaction, index) => { %>
                <div class="transaction-preview-card <%= transaction.type === 'credit' ? 'transaction-credit' : 'transaction-debit' %>">
                  <div class="flex items-center justify-between">
                    <div class="flex items-center space-x-4">
                      <div class="w-12 h-12 rounded-full flex items-center justify-center <%= transaction.type === 'credit' ? 'bg-green-100 text-green-600' : 'bg-red-100 text-red-600' %>">
                        <% if (transaction.type === 'credit') { %>
                          <i class="fas fa-plus"></i>
                        <% } else { %>
                          <i class="fas fa-shopping-bag"></i>
                        <% } %>
                      </div>
                      <div>
                        <p class="font-semibold text-gray-800 text-sm">
                          <%= transaction.description || (transaction.type === 'credit' ? 'Money Added' : 'Purchase Payment') %>
                        </p>
                        <p class="text-xs text-gray-500">
                          <%= new Date(transaction.date).toLocaleDateString('en-IN', {
                             month: 'short',
                             day: 'numeric',
                             hour: '2-digit',
                             minute: '2-digit'
                          }) %>
                        </p>
                      </div>
                    </div>
                    <div class="text-right">
                      <p class="font-bold <%= transaction.type === 'credit' ? 'text-green-600' : 'text-red-600' %>">
                        <%= transaction.type === 'credit' ? '+' : '-' %>₹<%= transaction.amount.toFixed(2) %>
                      </p>
                      <span class="inline-block w-2 h-2 bg-green-400 rounded-full"></span>
                    </div>
                  </div>
                </div>
              <% }) %>
            </div>
          <% } else { %>
            <div class="text-center py-12">
              <i class="fas fa-receipt text-gray-300 text-4xl mb-4"></i>
              <p class="text-gray-600 mb-4">No recent transactions</p>
              <button onclick="openAddMoneyModal()" class="bg-blue-600 text-white px-6 py-3 rounded-xl hover:bg-blue-700 transition font-semibold">
                Add Money to Get Started
              </button>
            </div>
          <% } %>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- All Modals remain the same as in your original code -->
<!-- Transaction History Modal -->
<div id="transactionHistoryModal" class="fixed inset-0 modal-overlay flex items-center justify-center z-50 hidden p-4">
  <div class="modal-content w-full max-w-2xl relative max-h-[85vh] overflow-hidden">
    <div class="sticky top-0 bg-white bg-opacity-95 backdrop-blur-lg border-b p-6 rounded-t-2xl">
      <button onclick="closeTransactionHistoryModal()" class="absolute top-4 right-4 w-8 h-8 flex items-center justify-center rounded-full bg-gray-100 hover:bg-gray-200 text-gray-600 hover:text-red-500 transition-all">
        <i class="fas fa-times"></i>
      </button>
      <div class="flex items-center gap-3 mb-4">
        <div class="w-12 h-12 bg-gray-100 rounded-xl flex items-center justify-center">
          <i class="fas fa-history text-gray-600"></i>
        </div>
        <div>
          <h2 class="text-xl font-bold text-gray-800" style="font-family: 'Raleway', sans-serif;">Transaction History</h2>
          <p class="text-sm text-gray-600">View all your wallet transactions</p>
        </div>
      </div>
      <div class="flex gap-2">
        <div class="relative flex-1">
          <input type="text" id="transactionSearch" placeholder="Search transactions..." class="w-full pl-10 pr-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-gray-500 focus:border-transparent">
          <i class="fas fa-search text-gray-400 absolute left-3 top-1/2 transform -translate-y-1/2"></i>
        </div>
        <select id="transactionFilter" class="px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-gray-500 focus:border-transparent">
          <option value="all">All</option>
          <option value="credit">Added</option>
          <option value="debit">Spent</option>
        </select>
      </div>
    </div>
    
    <div class="overflow-y-auto p-6" style="max-height: calc(85vh - 160px);">
      <div class="space-y-4">
        <% if (wallet && wallet.transactions && wallet.transactions.length > 0) { %>
          <%
            const sortedTransactions = wallet.transactions.sort((a, b) => new Date(b.date) - new Date(a.date));
          %>
          <% sortedTransactions.forEach((transaction, index) => { %>
            <div class="transaction-preview-card <%= transaction.type === 'credit' ? 'transaction-credit' : 'transaction-debit' %> border rounded-xl p-4 hover:shadow-sm" data-type="<%= transaction.type %>">
              <div class="flex items-center gap-4">
                <div class="relative">
                  <div class="w-12 h-12 rounded-full flex items-center justify-center <%= transaction.type === 'credit' ? 'bg-green-100 text-green-600' : 'bg-red-100 text-red-600' %>">
                    <% if (transaction.type === 'credit') { %>
                      <i class="fas fa-plus"></i>
                    <% } else { %>
                      <i class="fas fa-shopping-bag"></i>
                    <% } %>
                  </div>
                  <% if (index < 3) { %>
                    <div class="activity-dot bg-green-400 absolute -top-1 -right-1"></div>
                  <% } %>
                </div>
                
                <div class="flex-1 min-w-0">
                  <div class="flex justify-between items-start">
                    <div class="min-w-0 flex-1">
                      <p class="font-medium text-gray-800 text-sm truncate">
                        <%= transaction.description || (transaction.type === 'credit' ? 'Money Added to Wallet' : 'Purchase Payment') %>
                      </p>
                      <div class="flex items-center gap-3 text-xs text-gray-500 mt-1">
                        <span>
                          <%= new Date(transaction.date).toLocaleDateString('en-IN', {
                             year: 'numeric',
                             month: 'short',
                             day: 'numeric',
                             hour: '2-digit',
                             minute: '2-digit'
                          }) %>
                        </span>
                        <% if (transaction.reference) { %>
                          <span class="bg-gray-100 px-2 py-1 rounded">Ref: <%= transaction.reference %></span>
                        <% } %>
                      </div>
                    </div>
                    
                    <div class="text-right ml-4">
                      <p class="font-bold text-sm <%= transaction.type === 'credit' ? 'text-green-600' : 'text-red-600' %>">
                        <%= transaction.type === 'credit' ? '+' : '-' %>₹<%= transaction.amount.toFixed(2) %>
                      </p>
                      <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800 mt-1">
                        <div class="w-1.5 h-1.5 bg-green-400 rounded-full mr-1"></div>
                        Completed
                      </span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          <% }) %>
        <% } else { %>
          <div class="text-center text-gray-600 bg-gray-50 p-8 rounded-lg">
            <i class="fas fa-receipt text-gray-300 text-5xl mb-4"></i>
            <h4 class="text-lg font-semibold mb-2">No transactions yet</h4>
            <p class="text-sm mb-4">Start using your wallet to see history here.</p>
            <button onclick="closeTransactionHistoryModal(); openAddMoneyModal();" class="bg-gray-800 text-white px-4 py-2 rounded-lg hover:bg-gray-700 text-sm">
              Add Money to Get Started
            </button>
          </div>
        <% } %>
      </div>
    </div>
  </div>
</div>

<!-- Spending Analytics Modal -->
<div id="spendingAnalyticsModal" class="fixed inset-0 modal-overlay flex items-center justify-center z-50 hidden p-4">
  <div class="modal-content w-full max-w-2xl relative max-h-[85vh] overflow-hidden">
    <div class="sticky top-0 bg-white bg-opacity-95 backdrop-blur-lg border-b p-6 rounded-t-2xl">
      <button onclick="closeSpendingAnalyticsModal()" class="absolute top-4 right-4 w-8 h-8 flex items-center justify-center rounded-full bg-gray-100 hover:bg-gray-200 text-gray-600 hover:text-red-500 transition-all">
        <i class="fas fa-times"></i>
      </button>
      <div class="flex items-center gap-3">
        <div class="w-12 h-12 bg-gray-100 rounded-xl flex items-center justify-center">
          <i class="fas fa-chart-bar text-gray-600"></i>
        </div>
        <div>
          <h2 class="text-xl font-bold text-gray-800" style="font-family: 'Raleway', sans-serif;">Spending Analytics</h2>
          <p class="text-sm text-gray-600">Analyze your spending patterns</p>
        </div>
      </div>
    </div>
    
    <div class="overflow-y-auto p-6" style="max-height: calc(85vh - 120px);">
      <!-- Monthly Spending Chart -->
      <div class="bg-gradient-to-br from-gray-50 to-gray-100 p-6 rounded-xl mb-6">
        <h4 class="text-sm font-medium text-gray-700 mb-4">Monthly Spending Trend</h4>
        <div class="flex items-end justify-between h-32 gap-2">
          <% 
            const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'];
            const monthlyData = [1200, 800, 1500, 900, 1100, thisMonthTransactions];
            const maxAmount = Math.max(...monthlyData);
          %>
          <% months.forEach((month, index) => { %>
            <div class="flex flex-col items-center flex-1">
              <div class="w-full bg-gray-200 rounded-t" style="height: <%= Math.max((monthlyData[index] / maxAmount) * 100, 20) %>px;">
                <div class="w-full bg-gradient-to-t from-blue-500 to-purple-600 rounded-t h-full"></div>
              </div>
              <span class="text-xs text-gray-600 mt-2"><%= month %></span>
              <span class="text-xs text-gray-500">₹<%= monthlyData[index] %></span>
            </div>
          <% }) %>
        </div>
      </div>
      
      <!-- Spending Categories -->
      <div class="space-y-4">
        <h4 class="text-sm font-medium text-gray-700 mb-3">Spending Categories</h4>
        
        <div class="bg-white p-4 rounded-xl border">
          <div class="flex justify-between items-center mb-3">
            <div class="flex items-center gap-2">
              <div class="w-3 h-3 bg-green-500 rounded-full"></div>
              <span class="text-sm font-medium text-gray-700">Shopping</span>
            </div>
            <span class="text-sm text-gray-600">₹<%= (thisMonthTransactions * 0.6).toFixed(2) %></span>
          </div>
          <div class="w-full bg-gray-200 rounded-full h-2">
            <div class="bg-gradient-to-r from-green-400 to-green-600 h-2 rounded-full" style="width: 60%"></div>
          </div>
          <p class="text-xs text-gray-500 mt-1">60% of total spending</p>
        </div>
        
        <div class="bg-white p-4 rounded-xl border">
          <div class="flex justify-between items-center mb-3">
            <div class="flex items-center gap-2">
              <div class="w-3 h-3 bg-blue-500 rounded-full"></div>
              <span class="text-sm font-medium text-gray-700">Food & Dining</span>
            </div>
            <span class="text-sm text-gray-600">₹<%= (thisMonthTransactions * 0.25).toFixed(2) %></span>
          </div>
          <div class="w-full bg-gray-200 rounded-full h-2">
            <div class="bg-gradient-to-r from-blue-400 to-blue-600 h-2 rounded-full" style="width: 25%"></div>
          </div>
          <p class="text-xs text-gray-500 mt-1">25% of total spending</p>
        </div>
        
        <div class="bg-white p-4 rounded-xl border">
          <div class="flex justify-between items-center mb-3">
            <div class="flex items-center gap-2">
              <div class="w-3 h-3 bg-yellow-500 rounded-full"></div>
              <span class="text-sm font-medium text-gray-700">Transportation</span>
            </div>
            <span class="text-sm text-gray-600">₹<%= (thisMonthTransactions * 0.1).toFixed(2) %></span>
          </div>
          <div class="w-full bg-gray-200 rounded-full h-2">
            <div class="bg-gradient-to-r from-yellow-400 to-yellow-600 h-2 rounded-full" style="width: 10%"></div>
          </div>
          <p class="text-xs text-gray-500 mt-1">10% of total spending</p>
        </div>
        
        <div class="bg-white p-4 rounded-xl border">
          <div class="flex justify-between items-center mb-3">
            <div class="flex items-center gap-2">
              <div class="w-3 h-3 bg-purple-500 rounded-full"></div>
              <span class="text-sm font-medium text-gray-700">Others</span>
            </div>
            <span class="text-sm text-gray-600">₹<%= (thisMonthTransactions * 0.05).toFixed(2) %></span>
          </div>
          <div class="w-full bg-gray-200 rounded-full h-2">
            <div class="bg-gradient-to-r from-purple-400 to-purple-600 h-2 rounded-full" style="width: 5%"></div>
          </div>
          <p class="text-xs text-gray-500 mt-1">5% of total spending</p>
        </div>
      </div>
      
      <!-- Insights -->
      <div class="bg-blue-50 border border-blue-200 rounded-lg p-4 mt-6">
        <div class="flex items-start gap-3">
          <i class="fas fa-info-circle text-blue-600 mt-0.5"></i>
          <div>
            <h5 class="font-medium text-blue-800 mb-1">Spending Insight</h5>
            <p class="text-sm text-blue-700">
              <% if (spendingChange > 0) { %>
                Your spending increased by <%= spendingChange.toFixed(1) %>% compared to last month. Consider reviewing your shopping expenses.
              <% } else if (spendingChange < 0) { %>
                Great job! Your spending decreased by <%= Math.abs(spendingChange).toFixed(1) %>% compared to last month.
              <% } else { %>
                Your spending pattern is consistent with last month.
              <% } %>
            </p>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Compact Add Money Modal -->
<!-- Smaller Add Money Modal -->
<div id="addMoneyModal" class="fixed inset-0 modal-overlay flex items-center justify-center z-50 hidden p-4">
  <div class="modal-content w-full max-w-xs relative max-h-[85vh] overflow-y-auto">
    <div class="sticky top-0 bg-white bg-opacity-95 backdrop-blur-lg border-b p-4 rounded-t-2xl">
      <button onclick="closeAddMoneyModal()" class="absolute top-2 right-2 w-7 h-7 flex items-center justify-center rounded-full bg-gray-100 hover:bg-gray-200 text-gray-600 hover:text-red-500 transition-all">
        <i class="fas fa-times text-sm"></i>
      </button>
      <div class="flex items-center gap-2">
        <div class="w-8 h-8 bg-gray-100 rounded-lg flex items-center justify-center">
          <i class="fas fa-plus text-gray-600 text-sm"></i>
        </div>
        <div>
          <h2 class="text-base font-bold text-gray-800" style="font-family: 'Raleway', sans-serif;">Add Money</h2>
          <p class="text-xs text-gray-600">Top up your wallet</p>
        </div>
      </div>
    </div>
    
    <div class="p-4">
      <form id="addMoneyForm">
        <!-- Amount Input -->
        <div class="mb-4">
          <label class="block text-xs font-medium text-gray-700 mb-2">Amount</label>
          <div class="relative">
            <span class="absolute left-2 top-1/2 transform -translate-y-1/2 text-gray-500 font-medium text-sm">₹</span>
            <input type="number" name="amount" id="amount" class="w-full border-2 border-gray-200 rounded-lg pl-6 pr-2 py-2 focus:ring-2 focus:ring-gray-500 focus:border-gray-500 text-sm font-medium transition-colors" placeholder="0" >
          </div>
        </div>
        
        <!-- Quick Amount Buttons -->
        <div class="mb-4">
          <p class="text-xs font-medium text-gray-700 mb-2">Quick Select</p>
          <div class="grid grid-cols-2 gap-2">
            <button type="button" onclick="setAmount(100)" class="bg-gray-50 hover:bg-gray-100 border border-gray-200 hover:border-gray-300 px-2 py-2 rounded-lg text-xs font-medium transition-colors">₹100</button>
            <button type="button" onclick="setAmount(500)" class="bg-gray-50 hover:bg-gray-100 border border-gray-200 hover:border-gray-300 px-2 py-2 rounded-lg text-xs font-medium transition-colors">₹500</button>
            <button type="button" onclick="setAmount(1000)" class="bg-gray-50 hover:bg-gray-100 border border-gray-200 hover:border-gray-300 px-2 py-2 rounded-lg text-xs font-medium transition-colors">₹1,000</button>
            <button type="button" onclick="setAmount(2000)" class="bg-gray-50 hover:bg-gray-100 border border-gray-200 hover:border-gray-300 px-2 py-2 rounded-lg text-xs font-medium transition-colors">₹2,000</button>
          </div>
        </div>
        
        <!-- Payment Methods -->
        <div class="mb-4">
          <label class="block text-xs font-medium text-gray-700 mb-2">Payment Method</label>
          <div class="space-y-2">
            <label class="flex items-center p-2 border border-gray-200 rounded-lg hover:border-gray-300 cursor-pointer transition-colors">
              <input type="radio" name="paymentMethod" value="Upi" class="mr-2 w-3 h-3 text-gray-600" required>
              <div class="flex items-center flex-1">
                <div class="w-7 h-7 bg-orange-100 rounded-lg flex items-center justify-center mr-2">
                  <i class="fas fa-mobile-alt text-orange-600 text-xs"></i>
                </div>
                <div>
                  <p class="font-medium text-gray-800 text-xs">UPI</p>
                  <p class="text-xs text-gray-500">Instant payment</p>
                </div>
              </div>
            </label>
            
            <label class="flex items-center p-2 border border-gray-200 rounded-lg hover:border-gray-300 cursor-pointer transition-colors">
              <input type="radio" name="paymentMethod" value="Net-Banking" class="mr-2 w-3 h-3 text-gray-600">
              <div class="flex items-center flex-1">
                <div class="w-7 h-7 bg-blue-100 rounded-lg flex items-center justify-center mr-2">
                  <i class="fas fa-university text-blue-600 text-xs"></i>
                </div>
                <div>
                  <p class="font-medium text-gray-800 text-xs">Net Banking</p>
                  <p class="text-xs text-gray-500">Bank transfer</p>
                </div>
              </div>
            </label>
            
            <label class="flex items-center p-2 border border-gray-200 rounded-lg hover:border-gray-300 cursor-pointer transition-colors">
              <input type="radio" name="paymentMethod" value="Debit-Card" class="mr-2 w-3 h-3 text-gray-600">
              <div class="flex items-center flex-1">
                <div class="w-7 h-7 bg-green-100 rounded-lg flex items-center justify-center mr-2">
                  <i class="fas fa-credit-card text-green-600 text-xs"></i>
                </div>
                <div>
                  <p class="font-medium text-gray-800 text-xs">Debit Card</p>
                  <p class="text-xs text-gray-500">Card payment</p>
                </div>
              </div>
            </label>
          </div>
        </div>
        
        <!-- Submit Buttons -->
        <div class="flex gap-2">
          <button type="button" onclick="closeAddMoneyModal()" class="flex-1 bg-gray-100 text-gray-700 px-3 py-2 rounded-lg hover:bg-gray-200 font-medium transition-colors text-xs">Cancel</button>
          <button type="submit" id="addBtn" class="flex-1 bg-gray-800 text-white px-3 py-2 rounded-lg hover:bg-gray-700 font-medium transition-colors text-xs">Add Money</button>
        </div>
      </form>
    </div>
  </div>
</div>


<div id="toaster"></div>

<!-- Razorpay -->
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<script>
// All your existing JavaScript remains exactly the same
// Fixed mobile sidebar functionality (Same as Profile Page)
document.addEventListener('DOMContentLoaded', function() {
  const mobileMenuToggle = document.getElementById('mobileMenuToggle');
  const sidebarOverlay = document.getElementById('sidebarOverlay');
  const mobileSidebar = document.getElementById('mobileSidebar');
  const closeSidebar = document.getElementById('closeSidebar');

  if (!mobileMenuToggle || !sidebarOverlay || !mobileSidebar || !closeSidebar) {
    console.warn('Some mobile sidebar elements are missing');
    return;
  }

  function openSidebar() {
    sidebarOverlay.classList.add('show');
    setTimeout(() => {
      mobileSidebar.classList.add('open');
    }, 50);
  }

  function closeSidebarFunc() {
    mobileSidebar.classList.remove('open');
    setTimeout(() => {
      sidebarOverlay.classList.remove('show');
    }, 300);
  }

  mobileMenuToggle.addEventListener('click', function(e) {
    e.preventDefault();
    e.stopPropagation();
    openSidebar();
  });

  closeSidebar.addEventListener('click', function(e) {
    e.preventDefault();
    e.stopPropagation();
    closeSidebarFunc();
  });

  sidebarOverlay.addEventListener('click', function(e) {
    if (e.target === sidebarOverlay) {
      closeSidebarFunc();
    }
  });

  const observer = new MutationObserver(function(mutations) {
    mutations.forEach(function(mutation) {
      if (mutation.type === 'attributes' && mutation.attributeName === 'class') {
        if (sidebarOverlay.classList.contains('show')) {
          document.body.style.overflow = 'hidden';
        } else {
          document.body.style.overflow = '';
        }
      }
    });
  });

  observer.observe(sidebarOverlay, {
    attributes: true,
    attributeFilter: ['class']
  });
});

// Wallet functionality
function openTransactionHistoryModal() {
  document.getElementById('transactionHistoryModal').classList.remove('hidden');
  document.body.style.overflow = 'hidden';
}

function closeTransactionHistoryModal() {
  document.getElementById('transactionHistoryModal').classList.add('hidden');
  document.body.style.overflow = 'auto';
}

function openSpendingAnalyticsModal() {
  document.getElementById('spendingAnalyticsModal').classList.remove('hidden');
  document.body.style.overflow = 'hidden';
}

function closeSpendingAnalyticsModal() {
  document.getElementById('spendingAnalyticsModal').classList.add('hidden');
  document.body.style.overflow = 'auto';
}

function openAddMoneyModal() {
  document.getElementById('addMoneyModal').classList.remove('hidden');
  document.body.style.overflow = 'hidden';
}

function closeAddMoneyModal() {
  document.getElementById('addMoneyModal').classList.add('hidden');
  document.getElementById('addMoneyForm').reset();
  document.body.style.overflow = 'auto';
}

function setAmount(amount) {
  document.getElementById('amount').value = amount;
}

//Add Money
const form = document.getElementById('addMoneyForm');

form.addEventListener('submit', async (e) => {
  e.preventDefault();

  const amount = Number(form.amount.value)
  const paymentMethod = form.paymentMethod.value

  try{
    const response = await fetch('/wallet',{
      method:'POST',
      headers: {'Content-Type': 'application/json'},
      body: JSON.stringify({amount,paymentMethod})
    });

    const data = await response.json();

    if(data.success){
      const options = {
        key: data.razorpayKey,
        amount: data.amount,
        currency: data.currency,
        name: 'WoodLand',
        image: '/images/logo.png',
        order_id: data.orderId,
        handler: function (response) {
          fetch('/verify-walletPayment', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
              ...response,
              paymentMethod,
              amount:amount,
            })
          })
          .then(res => res.json())
          .then(verifyData => {
            if(verifyData.success){
              closeAddMoneyModal()
              showToaster(verifyData.message, 'success');
              setTimeout(() => {
                window.location.reload()
              },1800);
            }else{
              return showToaster(verifyData.message,'error')
            }
          });
        },
        prefill: {
          name: "<%= user.name %>",
          email: "<%= user.email %>",
          contact: "<%= user.phone %>"
        },
        notes: {
          purpose: 'Adding money to wallet'
        },
        theme: {
          color: "#1F2937"
        },
        external: {
          wallets: ['paytm', 'phonepe']
        }
      };

      const rzp = new Razorpay(options)
      rzp.open()
    }
    else{
      return showToaster(data.message, 'error');
    }
  }catch (error){
    console.error('Error:', error);
    showToaster('Server error. Please try again.', 'error');
  }
})

// Export transactions
function exportTransactions() {
  const transactions = document.querySelectorAll('.transaction-preview-card');
  let csvContent = "Date,Description,Type,Amount,Status\n";
  
  transactions.forEach(transaction => {
    const date = transaction.querySelector('.text-xs').textContent.trim();
    const description = transaction.querySelector('.font-medium, .font-semibold').textContent.trim();
    const type = transaction.classList.contains('transaction-credit') ? 'Credit' : 'Debit';
    const amount = transaction.querySelector('.font-bold').textContent.replace('₹', '').replace('+', '').replace('-', '');
    csvContent += `"${date}","${description}","${type}","${amount}","Completed"\n`;
  });
  
  const blob = new Blob([csvContent], { type: 'text/csv' });
  const url = window.URL.createObjectURL(blob);
  const a = document.createElement('a');
  a.href = url;
  a.download = 'wallet_transactions.csv';
  a.click();
  window.URL.revokeObjectURL(url);
}

// Transaction filter functionality
document.getElementById('transactionFilter')?.addEventListener('change', function(e) {
  const filterValue = e.target.value;
  const transactions = document.querySelectorAll('[data-type]');
  
  transactions.forEach(transaction => {
    const transactionType = transaction.getAttribute('data-type');
    if (filterValue === 'all' || filterValue === transactionType) {
      transaction.style.display = 'block';
    } else {
      transaction.style.display = 'none';
    }
  });
});

// Transaction search functionality
document.getElementById('transactionSearch')?.addEventListener('input', function(e) {
  const searchTerm = e.target.value.toLowerCase();
  const transactions = document.querySelectorAll('.transaction-preview-card');
  
  transactions.forEach(transaction => {
    const description = transaction.querySelector('.font-semibold').textContent.toLowerCase();
    const amount = transaction.querySelector('.font-bold').textContent.toLowerCase();
    
    if (description.includes(searchTerm) || amount.includes(searchTerm)) {
      transaction.style.display = 'block';
    } else {
      transaction.style.display = 'none';
    }
  });
});

// Close modals when clicking outside
document.getElementById('transactionHistoryModal').addEventListener('click', function(e) {
  if (e.target === this) {
    closeTransactionHistoryModal();
  }
});

document.getElementById('spendingAnalyticsModal').addEventListener('click', function(e) {
  if (e.target === this) {
    closeSpendingAnalyticsModal();
  }
});

document.getElementById('addMoneyModal').addEventListener('click', function(e) {
  if (e.target === this) {
    closeAddMoneyModal();
  }
});

// Handle escape key
document.addEventListener('keydown', function(e) {
  if (e.key === 'Escape') {
    closeAddMoneyModal();
    closeTransactionHistoryModal();
    closeSpendingAnalyticsModal();
  }
});

function logout() {
  if (confirm('Are you sure you want to logout?')) {
    window.location.href = '/logout';
  }
}

// Toaster Message Function (Same as Profile Page)
function showToaster(message, type = 'success', duration = 3000) {
  const toaster = document.getElementById('toaster');
  toaster.textContent = message;

  toaster.className = '';
  toaster.classList.add('show', type);

  setTimeout(() => {
    toaster.classList.remove('show');
  }, duration);
}

// Initialize on page load
document.addEventListener('DOMContentLoaded', function() {
  // Add smooth scroll behavior
  document.documentElement.style.scrollBehavior = 'smooth';
  
  // Animate stats on load
  const statCards = document.querySelectorAll('.modern-stat-card');
  statCards.forEach((card, index) => {
    card.style.opacity = '0';
    card.style.transform = 'translateY(20px)';
    setTimeout(() => {
      card.style.transition = 'all 0.5s ease';
      card.style.opacity = '1';
      card.style.transform = 'translateY(0)';
    }, index * 100);
  });
});
</script>

<%- include('../../views/partials/user/footer') %>
