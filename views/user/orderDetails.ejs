<link rel="stylesheet" href="./css/profile.css">
<%- include('../../views/partials/user/header') %>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" />

<style>
  .swal2-popup {
    border-radius: .7rem !important;
  }
  .swal2-title {
    font-size: 20px !important;
  }

  #toaster {
    position: fixed;
    top: 20px;
    right: 20px;
    padding: 12px 20px;
    border-radius: 8px;
    font-size: 14px;
    z-index: 9999;
    opacity: 0;
    transform: translateY(-20px);
    transition: all 0.3s ease;
    color: white;
  }

  #toaster.show {
    opacity: 1;
    transform: translateY(0);
  }

  #toaster.success {
    background-color: #38a169;
  }

  #toaster.error {
    background-color: #e53e3e;
  }

  /* Fixed Mobile Menu Button */
  #mobileMenuToggle {
    position: fixed;
    left: 20px;
    top: 50%;
    transform: translateY(-50%);
    width: 60px;
    height: 60px;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border: 2px solid rgba(0, 0, 0, 0.1);
    border-radius: 50%;
    display: none;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 1001;
    transition: all 0.3s ease;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  }

  /* Show only on mobile screens */
  @media (max-width: 767px) {
    #mobileMenuToggle {
      display: flex !important;
    }
  }

  #mobileMenuToggle:hover {
    background: rgba(255, 255, 255, 1);
    border-color: rgba(0, 0, 0, 0.2);
    box-shadow: 0 6px 25px rgba(0, 0, 0, 0.15);
    transform: translateY(-50%) scale(1.05);
  }

  #mobileMenuToggle i {
    color: #374151;
    font-size: 1.8rem;
    transition: all 0.3s ease;
  }

  /* Fixed Sidebar Overlay */
  .sidebar-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(4px);
    z-index: 1000;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
  }

  .sidebar-overlay.show {
    opacity: 1;
    visibility: visible;
  }

  .mobile-sidebar {
    position: fixed;
    top: 0;
    left: 0;
    width: 320px;
    height: 100%;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(20px);
    transform: translateX(-100%);
    transition: transform 0.3s ease-in-out;
    z-index: 1001;
    border-radius: 0 20px 20px 0;
    overflow-y: auto;
  }

  .mobile-sidebar.open {
    transform: translateX(0);
  }

  /* Profile container and other styles */
  .profile-container {
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
    min-height: 100vh;
    padding-top: 80px;
  }

  .glass-card {
    background: rgba(255, 255, 255, 0.25);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.3);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
  }

  .profile-img {
    width: 120px;
    height: 120px;
    border-radius: 50%;
    object-fit: cover;
    border: 4px solid rgba(255, 255, 255, 0.5);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
  }

  .menu-item {
    transition: all 0.3s ease;
    border-radius: 12px;
    margin-bottom: 8px;
  }

  .menu-item:hover {
    background: rgba(55, 65, 81, 0.1);
    transform: translateX(8px);
  }

  .menu-item.active {
    background: linear-gradient(135deg, #374151 0%, #4b5563 100%);
    color: white;
    box-shadow: 0 4px 15px rgba(55, 65, 81, 0.3);
  }

  /* Order details specific styles with glassmorphism */
  .back-button {
    background: linear-gradient(135deg, #3b82f6 0%, #4f46e5 100%);
    color: white;
    padding: 12px 24px;
    border-radius: 12px;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    font-weight: 600;
    box-shadow: 0 4px 15px rgba(59, 130, 246, 0.3);
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
  }

  .back-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(59, 130, 246, 0.4);
  }

  .status-badge {
    padding: 8px 16px;
    border-radius: 20px;
    font-size: 12px;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .order-item-card {
    background: rgba(255, 255, 255, 0.8);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 16px;
    padding: 24px;
    margin-bottom: 20px;
    transition: all 0.3s ease;
  }

  .order-item-card:hover {
    background: rgba(255, 255, 255, 0.9);
    transform: translateY(-2px);
    box-shadow: 0 12px 30px rgba(0, 0, 0, 0.1);
  }

  .action-btn {
    padding: 8px 16px;
    border-radius: 8px;
    font-weight: 600;
    font-size: 12px;
    cursor: pointer;
    transition: all 0.3s ease;
    border: none;
    margin: 2px;
  }

  .btn-primary {
    background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
    color: white;
    box-shadow: 0 2px 8px rgba(59, 130, 246, 0.3);
  }

  .btn-primary:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(59, 130, 246, 0.4);
  }

  .btn-secondary {
    background: linear-gradient(135deg, #6b7280 0%, #4b5563 100%);
    color: white;
    box-shadow: 0 2px 8px rgba(107, 114, 128, 0.3);
  }

  .btn-secondary:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(107, 114, 128, 0.4);
  }

  .btn-danger {
    background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
    color: white;
    box-shadow: 0 2px 8px rgba(239, 68, 68, 0.3);
  }

  .btn-danger:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(239, 68, 68, 0.4);
  }

  .btn-warning {
    background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
    color: white;
    box-shadow: 0 2px 8px rgba(245, 158, 11, 0.3);
  }

  .btn-warning:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(245, 158, 11, 0.4);
  }

  .btn-success {
    background: linear-gradient(135deg, #10b981 0%, #059669 100%);
    color: white;
    box-shadow: 0 2px 8px rgba(16, 185, 129, 0.3);
  }

  .btn-success:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(16, 185, 129, 0.4);
  }

  .invoice-buttons {
    display: flex;
    flex-wrap: wrap;
    gap: 12px;
  }

  .product-image {
    width: 80px;
    height: 80px;
    object-fit: cover;
    border-radius: 12px;
    border: 2px solid rgba(255, 255, 255, 0.5);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  }

  .reason-card {
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 12px;
    padding: 16px;
    margin-top: 16px;
  }

  .modal-overlay {
    backdrop-filter: blur(12px);
    background: rgba(0, 0, 0, 0.6);
  }

  .modal-content {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(30px);
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 20px;
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
    animation: modalSlideIn 0.3s ease;
  }

  @keyframes modalSlideIn {
    from {
      opacity: 0;
      transform: scale(0.95) translateY(-10px);
    }
    to {
      opacity: 1;
      transform: scale(1) translateY(0);
    }
  }

  /* Responsive breakpoints */
  @media (max-width: 768px) {
    .profile-container {
      padding-top: 60px;
    }
    
    .profile-img {
      width: 100px;
      height: 100px;
    }

    #mobileMenuToggle {
      left: 15px;
      width: 50px;
      height: 50px;
    }

    #mobileMenuToggle i {
      font-size: 1.5rem;
    }

    .mobile-sidebar {
      width: 280px;
    }

    .invoice-buttons {
      flex-direction: column;
    }
  }

  @media (max-width: 480px) {
    #mobileMenuToggle {
      left: 10px;
      width: 45px;
      height: 45px;
    }

    #mobileMenuToggle i {
      font-size: 1.2rem;
    }

    .mobile-sidebar {
      width: 260px;
    }
  }
</style>

<div class="profile-container">
  <div class="container mx-auto px-4 py-6">
    
    <!-- Fixed Mobile Menu Toggle -->
    <button id="mobileMenuToggle">
      <i class="fas fa-chevron-right"></i>
    </button>

    <!-- Mobile Header -->
    <div class="block sm:hidden text-center mb-8">
      <h1 class="text-2xl font-bold text-gray-800 mb-2" style="font-family: 'Raleway', sans-serif;">Order Details</h1>
      <p class="text-gray-600">View your order information</p>
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-4 gap-6">
      
      <!-- Desktop Sidebar - Same as Profile Page -->
      <div class="hidden lg:block">
        <div class="glass-card p-6 rounded-2xl sticky top-6">
          <div class="text-center mb-6">
            <img src="<%= user.profileImage || '/images/default-avatar.png' %>" alt="Profile" class="profile-img mx-auto mb-4">
            <h3 class="text-xl font-bold text-gray-800 mb-1" style="font-family: 'Raleway', sans-serif;"><%= user.name %></h3>
            <p class="text-sm text-gray-600">Member since <%= new Date(user.createdOn).getFullYear() %></p>
          </div>
          
          <nav class="space-y-2">
            <a href="/profile" class="menu-item flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-user mr-3"></i>Profile
            </a>
            <a href="/order" class="menu-item active flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-shopping-bag mr-3"></i>My Orders
            </a>
            <a href="/address" class="menu-item flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-map-marker-alt mr-3"></i>Addresses
            </a>
            <a href="/wishlist" class="menu-item flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-heart mr-3"></i>Wishlist
            </a>
            <a href="/wallet" class="menu-item flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-wallet mr-3"></i>Wallet
            </a>
          </nav>
          
          <button onclick="logout()" class="w-full mt-6 bg-gray-800 text-white py-3 px-4 rounded-xl hover:bg-gray-700 transition font-medium flex items-center justify-center">
            <i class="fas fa-sign-out-alt mr-2"></i>Logout
          </button>
        </div>
      </div>

      <!-- Fixed Mobile Sidebar Overlay -->
      <div id="sidebarOverlay" class="sidebar-overlay">
        <div id="mobileSidebar" class="mobile-sidebar">
          <div class="flex items-center justify-between mb-6 p-6">
            <h2 class="text-xl font-bold text-gray-800" style="font-family: 'Raleway', sans-serif;">Menu</h2>
            <button id="closeSidebar" class="p-2 hover:bg-gray-100 rounded-lg transition-colors">
              <i class="fas fa-times text-gray-600 text-xl"></i>
            </button>
          </div>

          <div class="text-center mb-6 px-6">
            <img src="<%= user.profileImage || '/images/default-avatar.png' %>" alt="Profile" class="profile-img mx-auto mb-4">
            <h3 class="text-lg font-bold text-gray-800 mb-1"><%= user.name %></h3>
            <p class="text-sm text-gray-600">Member since <%= new Date(user.createdOn).getFullYear() %></p>
          </div>
          
          <nav class="space-y-3 px-6">
            <a href="/profile" class="menu-item flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-user mr-3"></i>Profile
            </a>
            <a href="/order" class="menu-item active flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-shopping-bag mr-3"></i>My Orders
            </a>
            <a href="/address" class="menu-item flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-map-marker-alt mr-3"></i>Addresses
            </a>
            <a href="/wishlist" class="menu-item flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-heart mr-3"></i>Wishlist
            </a>
            <a href="/wallet" class="menu-item flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-wallet mr-3"></i>Wallet
            </a>
          </nav>
          
          <div class="px-6 mt-8">
            <button onclick="logout()" class="w-full bg-gray-800 text-white py-3 px-4 rounded-xl hover:bg-gray-700 transition font-medium flex items-center justify-center">
              <i class="fas fa-sign-out-alt mr-2"></i>Logout
            </button>
          </div>
        </div>
      </div>

      <!-- Main Content - Order Details -->
      <div class="lg:col-span-3 space-y-6">
        
        <!-- Back Button -->
        <div>
          <a href="/order" class="back-button">
            <i class="fas fa-arrow-left mr-2"></i>
            Back to Orders
          </a>
        </div>

        <!-- Order Header Card -->
        <div class="glass-card p-6 md:p-8 rounded-2xl">
          <div class="flex flex-col md:flex-row md:justify-between md:items-center mb-6">
            <div>
              <h2 class="text-2xl font-bold text-gray-800 mb-2" style="font-family: 'Raleway', sans-serif;">Order Details</h2>
              <p class="text-gray-600 mb-1">Order ID: <span class="font-semibold text-gray-800">#<%= order.orderId %></span></p>
              <p class="text-gray-600 mb-1">Order Date: <span class="font-semibold"><%= new Date(order.createdOn).toLocaleDateString('en-IN', {
                 year: 'numeric',
                 month: 'long',
                 day: 'numeric'
               }) %></span></p>
              <p class="text-gray-600">No. of Items: <%= order.orderitems.length %></p>
            </div>
            <div class="mt-4 md:mt-0">
              <% if (order.status) { %>
                <span class="status-badge
                  <%= order.status === 'Cancelled' ? 'bg-red-100 text-red-800' :
                      order.status === 'Delivered' ? 'bg-green-100 text-green-800' :
                      order.status === 'Shipped' ? 'bg-blue-100 text-blue-800' :
                      order.status === 'Processing' ? 'bg-yellow-100 text-yellow-800' :
                      'bg-gray-100 text-gray-800' %>">
                  <%= order.status %>
                </span>
              <% } %>
            </div>
          </div>
          
          <!-- Invoice Buttons -->
          <div class="border-t border-gray-200 pt-6">
            <div class="invoice-buttons">
              <a href="/invoice/full/<%= order._id %>" target="_blank" class="action-btn btn-primary">
                <i class="fas fa-eye mr-2"></i>View Complete Invoice
              </a>
              <button onclick="downloadCompleteInvoice('<%= order._id %>')" class="action-btn btn-secondary">
                <i class="fas fa-download mr-2"></i>Download Invoice
              </button>
              <button onclick="emailInvoice()" class="action-btn btn-success">
                <i class="fas fa-envelope mr-2"></i>Email Invoice
              </button>
            </div>
            
            <div class="mt-4 text-sm text-gray-600">
              <p class="flex items-center">
                <i class="fas fa-info-circle mr-2 text-gray-400"></i>
                View opens in new tab • Download saves PDF to your device • Email sends to your registered email
              </p>
            </div>
          </div>
        </div>

        <div class="grid lg:grid-cols-3 gap-6">
          <!-- Order Items -->
          <div class="lg:col-span-2">
            <div class="glass-card p-6 md:p-8 rounded-2xl">
              <h3 class="text-xl font-semibold text-gray-800 mb-6">Order Items</h3>
              
              <% order.orderitems.forEach((orderItem, index) => {
                 const product = orderItem.product;
                const imgSrc = product.images && product.images.length > 0
                   ? `/uploads/product-images/${product.images[0]}`
                   : '/images/default.jpg';
               %>
              
              <div class="order-item-card">
                <div class="grid md:grid-cols-4 gap-4">
                  <!-- Product Image -->
                  <div class="flex justify-center items-start">
                    <img src="<%= imgSrc %>" alt="<%= product.productName %>" class="product-image">
                  </div>
                  
                  <!-- Product Details -->
                  <div class="md:col-span-2 space-y-2">
                    <h4 class="text-lg font-semibold text-gray-800"><%= product.productName %></h4>
                    <p class="text-gray-600">SKU: <%= product.sku || 'N/A' %></p>
                    <p class="text-gray-600">Category: <%= product.category.name || 'N/A' %></p>
                    <div class="flex items-center space-x-4 text-sm">
                      <span class="text-gray-600">Qty: <span class="font-medium"><%= orderItem.quantity %></span></span>
                      <span class="text-gray-600">Price: <span class="font-medium">₹<%= orderItem.price %></span></span>
                    </div>
                  </div>
                  
                  <!-- Item Status & Actions -->
                  <div class="space-y-3">
                    <div class="text-right">
                      <p class="text-lg font-semibold text-gray-800">₹<%= (orderItem.quantity * orderItem.price).toLocaleString('en-IN') %></p>
                    </div>
                    
                    <div>
                      <span class="status-badge
                        <%= orderItem.status === 'Cancelled' ? 'bg-red-100 text-red-800' :
                            orderItem.status === 'return_accepted' ? 'bg-green-100 text-green-800' :
                            orderItem.status === 'return_rejected' ? 'bg-red-100 text-red-800' :
                            orderItem.status === 'return_requested' ? 'bg-yellow-100 text-yellow-800' :
                            orderItem.status === 'Delivered' ? 'bg-green-100 text-green-800' :
                            orderItem.status === 'Shipped' ? 'bg-blue-100 text-blue-800' :
                            orderItem.status === 'Processing' ? 'bg-purple-100 text-purple-800' :
                            'bg-gray-100 text-gray-800' %>">
                        <%= orderItem.status === 'return_accepted' ? 'Return Accepted' :
                            orderItem.status === 'return_rejected' ? 'Return Rejected' :
                            orderItem.status === 'Return Request' ? 'Return Requested' :
                            orderItem.status.replace('_', ' ').toUpperCase() %>
                      </span>
                    </div>
                    
                    <!-- Individual Item Actions -->
                    <div class="flex flex-col space-y-2">
                      <% if (orderItem.status !== 'Cancelled' && orderItem.status !== 'Returned' && orderItem.status !== 'return_accepted' && orderItem.status !== 'return_rejected' && orderItem.status !== 'Return Request' && orderItem.status !== 'Delivered') { %>
                        <button onclick="openModal('cancel', '<%= order._id %>', '<%= orderItem._id %>')" class="action-btn btn-danger">
                          Cancel Item
                        </button>
                      <% } %>
                      <% if (orderItem.status === 'Delivered' && orderItem.canRequestReturn !== false) { %>
                        <button onclick="openModal('return', '<%= order._id %>', '<%= orderItem._id %>')" class="action-btn btn-warning">
                          Return Item
                        </button>
                      <% } %>
                      
                      <!-- Item Invoice Actions -->
                      <div class="flex flex-col space-y-1">
                        <a href="/invoice/item/<%= order._id %>/<%= orderItem._id %>" target="_blank" class="action-btn btn-secondary text-center">
                          View Item Invoice
                        </a>
                        <button onclick="downloadItemInvoice('<%= orderItem._id %>')" class="action-btn btn-secondary">
                          Download Item Invoice
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
                
                <!-- Cancellation/Return Reason -->
                <% if (orderItem.status === 'Cancelled' && orderItem.cancellationReasonTitle) { %>
                  <div class="reason-card border-red-200 bg-red-50">
                    <div class="flex items-start">
                      <i class="fas fa-times-circle text-red-600 mt-1 mr-3"></i>
                      <div>
                        <h5 class="font-semibold text-red-800 mb-1">Item Cancelled</h5>
                        <p class="text-red-700 text-sm"><strong>Reason:</strong> <%= orderItem.cancellationReasonTitle %></p>
                        <% if (orderItem.cancellationReason && orderItem.cancellationReason !== '') { %>
                          <p class="text-red-700 text-sm mt-1"><strong>Details:</strong> <%= orderItem.cancellationReason %></p>
                        <% } %>
                      </div>
                    </div>
                  </div>
                <% } %>
                
                <% if (['Returned'].includes(orderItem.status) && orderItem.cancellationReasonTitle) { %>
                  <div class="reason-card
                    <%= orderItem.status === 'return_accepted' ? 'border-green-200 bg-green-50' : 
                        orderItem.status === 'return_rejected' ? 'border-red-200 bg-red-50' : 
                        'border-yellow-200 bg-yellow-50' %>">
                    <div class="flex items-start">
                      <i class="fas fa-undo <%= orderItem.status === 'return_accepted' ? 'text-green-600' : orderItem.status === 'return_rejected' ? 'text-red-600' : 'text-yellow-600' %> mt-1 mr-3"></i>
                      <div>
                        <h5 class="font-semibold <%= orderItem.status === 'return_accepted' ? 'text-green-800' : orderItem.status === 'return_rejected' ? 'text-red-800' : 'text-yellow-800' %> mb-1">
                          <%= orderItem.status %>
                        </h5>
                        <p class="text-sm <%= orderItem.status === 'return_accepted' ? 'text-green-700' : orderItem.status === 'return_rejected' ? 'text-red-700' : 'text-yellow-700' %>">
                          <strong>Reason:</strong> <%= orderItem.cancellationReasonTitle %>
                        </p>
                        <% if (orderItem.cancellationReason && orderItem.cancellationReason !== '') { %>
                          <p class="text-sm <%= orderItem.status === 'return_accepted' ? 'text-green-700' : orderItem.status === 'return_rejected' ? 'text-red-700' : 'text-yellow-700' %> mt-1">
                            <strong>Details:</strong> <%= orderItem.cancellationReason %>
                          </p>
                        <% } %>
                        <% if (orderItem.status === 'return_rejected' && orderItem.rejectionReason) { %>
                          <p class="text-sm text-red-700 mt-1">
                            <strong>Rejection Reason:</strong> <%= orderItem.rejectionReason %>
                          </p>
                        <% } %>
                      </div>
                    </div>
                  </div>
                <% } %>
              </div>
              
              <% }); %>
            </div>
          </div>

          <!-- Order Summary & Customer Info -->
          <div class="space-y-6">
            <!-- Order Summary -->
            <div class="glass-card p-6 rounded-2xl">
              <h3 class="text-xl font-semibold text-gray-800 mb-4">Order Summary</h3>
              
              <div class="space-y-3">
                <div class="flex justify-between text-gray-600">
                  <span>Subtotal:</span>
                  <span>₹<%= order.totalPrice.toLocaleString('en-IN') %></span>
                </div>
                
                <% if (order.couponCode) { %>
                <div class="flex justify-between items-center py-2 px-3 bg-green-50 border border-green-200 rounded-lg">
                  <div class="flex items-center">
                    <i class="fas fa-tag text-green-600 mr-2"></i>
                    <span class="text-green-700 font-medium">Coupon Applied:</span>
                  </div>
                  <span class="text-green-800 font-semibold bg-green-100 px-2 py-1 rounded text-sm"><%= order.couponCode %></span>
                </div>
                <% } %>
                
                <% if (order.couponDiscount && order.couponDiscount > 0) { %>
                <div class="flex justify-between text-green-600">
                  <span>Discount:</span>
                  <span>-₹<%= order.couponDiscount.toLocaleString('en-IN') %></span>
                </div>
                <% } %>
                
                <% if (order.shippingCost && order.shippingCost > 0) { %>
                <div class="flex justify-between text-gray-600">
                  <span>Shipping:</span>
                  <span>₹<%= order.shippingCost.toLocaleString('en-IN') %></span>
                </div>
                <% } else { %>
                  <div class="flex justify-between text-gray-600">
                    <span>Shipping:</span>
                    <span class="text-green-600">Free</span>
                  </div>
                <% } %>
                
                <div class="border-t pt-3">
                  <div class="flex justify-between text-lg font-semibold text-gray-800">
                    <span>Total:</span>
                    <span>₹<%= order.finalAmount.toLocaleString('en-IN') %></span>
                  </div>
                </div>
              </div>
            </div>

            <!-- Customer Information -->
            <div class="glass-card p-6 rounded-2xl">
              <h3 class="text-xl font-semibold text-gray-800 mb-4">Customer Information</h3>
              
              <div class="space-y-4">
                <div>
                  <h4 class="font-medium text-gray-700 mb-2">Contact Details</h4>
                  <p class="text-gray-600"><%= user.name %></p>
                  <p class="text-gray-600"><%= user.email %></p>
                  <% if (user.phone) { %>
                    <p class="text-gray-600"><%= user.phone %></p>
                  <% } %>
                </div>
                
                <div>
                  <h4 class="font-medium text-gray-700 mb-2">Shipping Address</h4>
                  <div class="text-gray-600 text-sm leading-relaxed">
                    <p><%= order.shippingAddress.title %></p>
                    <p><%= order.shippingAddress.address %></p>
                    <% if (order.shippingAddress.addressLine2) { %>
                      <p><%= order.shippingAddress.addressLine2 %></p>
                    <% } %>
                    <p><%= order.shippingAddress.city %>, <%= order.shippingAddress.state %> <%= order.shippingAddress.pincode %></p>
                    <p><%= order.shippingAddress.country %></p>
                    <% if (order.shippingAddress.phone) { %>
                      <p>Phone: <%= order.shippingAddress.phone %></p>
                    <% } %>
                  </div>
                </div>
                
                <div>
                  <h4 class="font-medium text-gray-700 mb-2">Payment Method</h4>
                  <div class="flex items-center mb-2">
                    <% if (order.paymentMethod === 'CARD') { %>
                      <i class="fas fa-credit-card text-blue-600 mr-2"></i>
                      <span class="text-gray-600">Credit/Debit Card</span>
                    <% } else if (order.paymentMethod === 'UPI') { %>
                      <i class="fas fa-mobile-alt text-green-600 mr-2"></i>
                      <span class="text-gray-600">UPI Payment</span>
                    <% } else if (order.paymentMethod === 'COD') { %>
                      <i class="fas fa-money-bill-wave text-orange-600 mr-2"></i>
                      <span class="text-gray-600">Cash on Delivery</span>
                    <% } else { %>
                      <span class="text-gray-600"><%= order.paymentMethod %></span>
                    <% } %>
                  </div>
                  
                  <div>
                    <span class="status-badge
                      <%= order.paymentStatus === 'paid' ? 'bg-green-100 text-green-800' :
                          order.paymentStatus === 'pending' ? 'bg-yellow-100 text-yellow-800' :
                          order.paymentStatus === 'failed' ? 'bg-red-100 text-red-800' :
                          'bg-gray-100 text-gray-800' %>">
                      Payment <%= order.paymentStatus %>
                    </span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Modal for Cancel/Return -->
<div id="reasonModal" class="fixed inset-0 modal-overlay hidden z-50 flex justify-center items-center">
  <div class="modal-content p-8 w-full max-w-md mx-4">
    <h2 id="modalTitle" class="text-xl font-bold mb-4 text-gray-800">Reason</h2>
    <form id="actionForm">
      <div class="mb-4">
        <label class="block mb-2 font-medium text-gray-700">Select Reason</label>
        <select id="reasonSelect" class="w-full border border-gray-300 px-3 py-2 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" required>
          <option value="">-- Select Reason --</option>
        </select>
      </div>
      <div class="mb-6">
        <label class="block mb-2 font-medium text-gray-700">Additional Details</label>
        <textarea id="customReason" class="w-full border border-gray-300 px-3 py-2 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" rows="3" placeholder="Please provide additional details (optional)..."></textarea>
      </div>
      <input type="hidden" name="orderId" id="hiddenOrderId">
      <input type="hidden" name="itemId" id="hiddenItemId">
      <input type="hidden" name="actionType" id="hiddenActionType">
      <div class="flex justify-end space-x-3">
        <button type="button" onclick="closeModal()" class="px-4 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400 transition">
          Cancel
        </button>
        <button id="submitReasonButton" type="button" class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition">
          Confirm
        </button>
      </div>
    </form>
  </div>
</div>

<div id="toaster"></div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
// Fixed mobile sidebar functionality (Same as Profile Page)
document.addEventListener('DOMContentLoaded', function() {
  const mobileMenuToggle = document.getElementById('mobileMenuToggle');
  const sidebarOverlay = document.getElementById('sidebarOverlay');
  const mobileSidebar = document.getElementById('mobileSidebar');
  const closeSidebar = document.getElementById('closeSidebar');

  if (!mobileMenuToggle || !sidebarOverlay || !mobileSidebar || !closeSidebar) {
    console.warn('Some mobile sidebar elements are missing');
    return;
  }

  function openSidebar() {
    sidebarOverlay.classList.add('show');
    setTimeout(() => {
      mobileSidebar.classList.add('open');
    }, 50);
  }

  function closeSidebarFunc() {
    mobileSidebar.classList.remove('open');
    setTimeout(() => {
      sidebarOverlay.classList.remove('show');
    }, 300);
  }

  mobileMenuToggle.addEventListener('click', function(e) {
    e.preventDefault();
    e.stopPropagation();
    openSidebar();
  });

  closeSidebar.addEventListener('click', function(e) {
    e.preventDefault();
    e.stopPropagation();
    closeSidebarFunc();
  });

  sidebarOverlay.addEventListener('click', function(e) {
    if (e.target === sidebarOverlay) {
      closeSidebarFunc();
    }
  });

  const observer = new MutationObserver(function(mutations) {
    mutations.forEach(function(mutation) {
      if (mutation.type === 'attributes' && mutation.attributeName === 'class') {
        if (sidebarOverlay.classList.contains('show')) {
          document.body.style.overflow = 'hidden';
        } else {
          document.body.style.overflow = '';
        }
      }
    });
  });

  observer.observe(sidebarOverlay, {
    attributes: true,
    attributeFilter: ['class']
  });
});

// Order details functionality
const RETURN_REASONS = <%- JSON.stringify(returnReasons || []) %>;
const CANCEL_REASONS = <%- JSON.stringify(cancelReasons || []) %>;

function openModal(actionType, orderId, itemId) {
  const modal = document.getElementById('reasonModal');
  const title = document.getElementById('modalTitle');
  const submitBtn = document.getElementById('submitReasonButton');
  const hiddenOrderId = document.getElementById('hiddenOrderId');
  const hiddenItemId = document.getElementById('hiddenItemId');
  const hiddenActionType = document.getElementById('hiddenActionType');
  const reasonSelect = document.getElementById('reasonSelect');

  title.textContent = actionType === 'cancel' ? 'Reason for Cancellation' : 'Reason for Return';

  hiddenOrderId.value = orderId;
  hiddenItemId.value = itemId;
  hiddenActionType.value = actionType;

  reasonSelect.innerHTML = '<option value="">-- Select Reason --</option>';
  const reasons = actionType === 'cancel' ? CANCEL_REASONS : RETURN_REASONS;
  
  if (Array.isArray(reasons)) {
    reasons.forEach(reason => {
      const option = document.createElement('option');
      option.value = reason;
      option.textContent = reason;
      reasonSelect.appendChild(option);
    });
  }

  modal.classList.remove('hidden');

  submitBtn.onclick = async function () {
    const reasonTitle = reasonSelect.value.trim();
    const reason = document.getElementById('customReason').value.trim();

    if (!reasonTitle) {
      showToaster('Please select a reason.', 'error');
      return;
    }

    const requestBody = {
      orderId,
      itemId,
      action: actionType,
      type: 'item',
      reasonTitle,
      reason
    };

    submitBtn.disabled = true;
    submitBtn.textContent = 'Submitting...';

    try {
      const res = await fetch(`/orders/action`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(requestBody)
      });

      const data = await res.json();

      if (data.success) {
        showToaster(data.message || (actionType === 'cancel' ? 'Cancellation request submitted!' : 'Return request submitted!'), 'success');
        closeModal();
        setTimeout(() => location.reload(), 1500);
      } else {
        showToaster(data.message || 'Something went wrong.', 'error');
      }
    } catch (err) {
      console.error('Error submitting request:', err);
      showToaster('An error occurred while submitting the request.', 'error');
    } finally {
      submitBtn.disabled = false;
      submitBtn.textContent = 'Confirm';
    }
  };
}

function closeModal() {
  document.getElementById('reasonModal').classList.add('hidden');
  document.getElementById('actionForm').reset();
}

// Download Complete Invoice
function downloadCompleteInvoice(orderId) {
  showToaster('Generating PDF...', 'success');

  const form = document.createElement('form');
  form.method = 'GET';
  form.action = `/invoice/full/download/${orderId}`;
  form.style.display = 'none';

  const orderIdInput = document.createElement('input');
  orderIdInput.type = 'hidden';
  orderIdInput.name = 'orderId';
  orderIdInput.value = '<%= order._id %>';
  form.appendChild(orderIdInput);

  const typeInput = document.createElement('input');
  typeInput.type = 'hidden';
  typeInput.name = 'invoiceType';
  typeInput.value = 'order';
  form.appendChild(typeInput);

  document.body.appendChild(form);
  form.submit();
  document.body.removeChild(form);

  setTimeout(() => {
    showToaster('PDF Generated!', 'success');
  }, 2000);
}

// Download Item Invoice
function downloadItemInvoice(itemId) {
  showToaster('Generating PDF...', 'success');

  const form = document.createElement('form');
  form.method = 'POST';
  form.action = '/invoice/download';
  form.style.display = 'none';

  const orderIdInput = document.createElement('input');
  orderIdInput.type = 'hidden';
  orderIdInput.name = 'orderId';
  orderIdInput.value = '<%= order._id %>';
  form.appendChild(orderIdInput);

  const typeInput = document.createElement('input');
  typeInput.type = 'hidden';
  typeInput.name = 'invoiceType';
  typeInput.value = 'item';
  form.appendChild(typeInput);

  const itemIdInput = document.createElement('input');
  itemIdInput.type = 'hidden';
  itemIdInput.name = 'itemId';
  itemIdInput.value = itemId;
  form.appendChild(itemIdInput);

  document.body.appendChild(form);
  form.submit();
  document.body.removeChild(form);

  setTimeout(() => {
    showToaster('PDF Generated!', 'success');
  }, 2000);
}

// Email Invoice
function emailInvoice() {
  showToaster('Sending Email...', 'success');

  fetch('/invoice/email', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      orderId: '<%= order._id %>',
      invoiceType: 'order'
    })
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      showToaster('Email Sent!', 'success');
    } else {
      showToaster(data.message || 'Failed to send email. Please try again.', 'error');
    }
  })
  .catch(error => {
    console.error('Error sending email:', error);
    showToaster('An error occurred while sending the email.', 'error');
  });
}

function logout() {
  if (confirm('Are you sure you want to logout?')) {
    window.location.href = '/logout';
  }
}

// Toaster Message Function (Same as Profile Page)
function showToaster(message, type = 'success', duration = 3000) {
  const toaster = document.getElementById('toaster');
  toaster.textContent = message;

  toaster.className = '';
  toaster.classList.add('show', type);

  setTimeout(() => {
    toaster.classList.remove('show');
  }, duration);
}

// Close modal when clicking outside
document.getElementById('reasonModal').addEventListener('click', function(e) {
  if (e.target === this) {
    closeModal();
  }
});

// Close modal with Escape key
document.addEventListener('keydown', function(e) {
  if (e.key === 'Escape') {
    closeModal();
  }
});
</script>

<%- include('../../views/partials/user/footer') %>
