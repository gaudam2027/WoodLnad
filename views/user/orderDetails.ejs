<%- include('../../views/partials/user/header') %>
<link rel="stylesheet" href="/css/profile.css">

<div class="container mx-auto px-4 py-8 max-w-6xl">
  <!-- Back to Orders -->
  <div class="mb-6">
    <a href="/order" class="inline-flex items-center px-2 py-2 bg-gradient-to-r from-blue-400 to-indigo-500 text-white rounded-lg shadow-lg hover:from-blue-500 hover:to-indigo-600 transition-all duration-300 group">
      <svg class="w-5 h-5 mr-2 transform group-hover:-translate-x-1 transition-all duration-300" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" d="M15 19l-7-7 7-7" />
      </svg>
      <span class="font-medium">Back to Orders</span>
    </a>
  </div>

  <!-- Order Header -->
  <div class="bg-white rounded-lg shadow-md p-6 mb-6">
    <div class="flex flex-col md:flex-row md:justify-between md:items-center mb-4">
      <div>
        <h1 class="text-2xl font-bold text-gray-800 mb-2">Order Details</h1>
        <p class="text-gray-600">Order ID: <span class="font-semibold text-gray-800">#<%= order.orderId %></span></p>
        <p class="text-gray-600">Order Date: <span class="font-semibold"><%= new Date(order.createdOn).toLocaleDateString('en-IN', {
           year: 'numeric',
           month: 'long',
           day: 'numeric'
         }) %></span></p>
        <p class="text-gray-600">No. of Items: <%= order.orderitems.length %></p>
      </div>
      <div class="mt-4 md:mt-0">
        <% if (order.status) { %>
          <span class="inline-block px-4 py-2 rounded-full text-sm font-medium
            <%= order.status === 'Cancelled' ? 'bg-red-100 text-red-800' :
                order.status === 'Delivered' ? 'bg-green-100 text-green-800' :
                order.status === 'Shipped' ? 'bg-blue-100 text-blue-800' :
                order.status === 'Processing' ? 'bg-yellow-100 text-yellow-800' :
                'bg-gray-100 text-gray-800' %>">
            <%= order.status %>
          </span>
        <% } %>
      </div>
    </div>
    
    <!-- Invoice Buttons -->
    <div class="border-t pt-4">
      <div class="flex flex-col sm:flex-row gap-3">
        <!-- View Complete Invoice Button -->
        <a href="/invoice/full/<%= order._id %>" 
           target="_blank"
           class="inline-flex items-center justify-center bg-indigo-600 text-white px-6 py-3 rounded-lg hover:bg-indigo-700 transition duration-200 shadow-md hover:shadow-lg">
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
          </svg>
          View Complete Invoice
        </a>

        <!-- Download Complete Invoice Button -->
        <button onclick="downloadCompleteInvoice('<%= order._id %>')" 
                class="inline-flex items-center justify-center bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition duration-200 shadow-md hover:shadow-lg">
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
          </svg>
          Download Complete Invoice
        </button>

        <!-- Email Invoice Button (Optional) -->
        <button onclick="emailInvoice()" 
                class="inline-flex items-center justify-center bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 transition duration-200 shadow-md hover:shadow-lg">
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
          </svg>
          Email Invoice
        </button>
      </div>
      
      <!-- Invoice Actions Info -->
      <div class="mt-3 text-sm text-gray-600">
        <p class="flex items-center">
          <svg class="w-4 h-4 mr-1 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
          View opens in new tab • Download saves PDF to your device • Email sends to your registered email
        </p>
      </div>
    </div>
  </div>

  <div class="grid lg:grid-cols-3 gap-6">
    <!-- Order Items -->
    <div class="lg:col-span-2">
      <div class="bg-white rounded-lg shadow-md p-6">
        <h2 class="text-xl font-semibold text-gray-800 mb-6">Order Items</h2>
        
        <% order.orderitems.forEach((orderItem, index) => {
           const product = orderItem.product;
          const imgSrc = product.images && product.images.length > 0
             ? `/uploads/product-images/${product.images[0]}`
             : '/images/default.jpg';
         %>
        
        <div class="<%= index > 0 ? 'border-t pt-6 mt-6' : '' %>">
          <div class="grid md:grid-cols-4 gap-4">
            <!-- Product Image -->
            <div class="flex justify-center items-start">
              <img src="<%= imgSrc %>" alt="<%= product.productName %>"
                    class="w-24 h-24 object-cover rounded-lg border">
            </div>
            <!-- Product Details -->
            <div class="md:col-span-2 space-y-2">
              <h3 class="text-lg font-semibold text-gray-800"><%= product.productName %></h3>
              <p class="text-gray-600">SKU: <%= product.sku || 'N/A' %></p>
              <p class="text-gray-600">Category: <%= product.category.name || 'N/A' %></p>
              <div class="flex items-center space-x-4 text-sm">
                <span class="text-gray-600">Qty: <span class="font-medium"><%= orderItem.quantity %></span></span>
                <span class="text-gray-600">Price: <span class="font-medium">₹<%= orderItem.price %></span></span>
              </div>
            </div>
            <!-- Item Status & Total -->
            <div class="space-y-3">
              <div class="text-right">
                <p class="text-lg font-semibold text-gray-800">₹<%= (orderItem.quantity * orderItem.price).toLocaleString('en-IN') %></p>
              </div>
              
              <div>
                <span class="inline-block px-3 py-1 rounded-full text-xs font-medium
                  <%= orderItem.status === 'Cancelled' ? 'bg-red-100 text-red-800' :
                      orderItem.status === 'return_accepted' ? 'bg-green-100 text-green-800' :
                      orderItem.status === 'return_rejected' ? 'bg-red-100 text-red-800' :
                      orderItem.status === 'return_requested' ? 'bg-yellow-100 text-yellow-800' :
                      orderItem.status === 'Delivered' ? 'bg-green-100 text-green-800' :
                      orderItem.status === 'Shipped' ? 'bg-blue-100 text-blue-800' :
                      orderItem.status === 'Processing' ? 'bg-purple-100 text-purple-800' :
                      'bg-gray-100 text-gray-800' %>">
                  <%= orderItem.status === 'return_accepted' ? 'Return Accepted' :
                      orderItem.status === 'return_rejected' ? 'Return Rejected' :
                      orderItem.status === 'Return Request' ? 'Return Requested' :
                      orderItem.status.replace('_', ' ').toUpperCase() %>
                </span>
              </div>
              <!-- Individual Item Actions -->
              <div class="flex flex-col space-y-2">
                <% if (orderItem.status !== 'Cancelled' &&orderItem.status !== 'Returned' && orderItem.status !== 'return_accepted' && orderItem.status !== 'return_rejected' && orderItem.status !== 'Return Request' && orderItem.status !== 'Delivered') { %>
                  <button
                     onclick="openModal('cancel', '<%= order._id %>', '<%= orderItem._id %>')"
                     class="text-xs bg-red-600 text-white px-3 py-1 rounded hover:bg-red-700 transition">
                    Cancel Item
                  </button>
                <% } %>
                <% if (orderItem.status === 'Delivered' && orderItem.canRequestReturn !== false) { %>
                  <button
                     onclick="openModal('return', '<%= order._id %>', '<%= orderItem._id %>')"
                     class="text-xs bg-yellow-600 text-white px-3 py-1 rounded hover:bg-yellow-700 transition">
                    Return Item
                  </button>
                <% } %>
                
                <!-- Item Invoice Actions -->
                <div class="flex flex-col space-y-1">
                  <a href="/invoice/item/<%= order._id %>/<%= orderItem._id %>"
                     target="_blank"
                     class="text-xs bg-gray-600 text-white px-3 py-1 rounded hover:bg-gray-700 transition text-center">
                    View Item Invoice
                  </a>
                  <button onclick="downloadItemInvoice('<%= orderItem._id %>')"
                          class="text-xs bg-gray-500 text-white px-3 py-1 rounded hover:bg-gray-600 transition">
                    Download Item Invoice
                  </button>
                </div>
              </div>
            </div>
          </div>
          <!-- Cancellation Reason -->
          <% if (orderItem.status === 'Cancelled' && orderItem.cancellationReasonTitle) { %>
            <div class="mt-4 p-4 bg-red-50 border border-red-200 rounded-lg">
              <div class="flex items-start">
                <svg class="w-5 h-5 text-red-600 mt-0.5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
                </svg>
                <div>
                  <h4 class="font-semibold text-red-800 mb-1">Item Cancelled</h4>
                  <p class="text-red-700 text-sm"><strong>Reason:</strong> <%= orderItem.cancellationReasonTitle %></p>
                  <% if (orderItem.cancellationReason && orderItem.cancellationReason !== '') { %>
                    <p class="text-red-700 text-sm mt-1"><strong>Additional Details:</strong> <%= orderItem.cancellationReason %></p>
                  <% } %>
                </div>
              </div>
            </div>
          <% } %>
          <!-- Return Reason -->
          <% if (['Returned'].includes(orderItem.status) && orderItem.cancellationReasonTitle) { %>
            <div class="mt-4 p-4 <%= orderItem.status === 'return_accepted' ? 'bg-green-50 border-green-200' : orderItem.status === 'return_rejected' ? 'bg-red-50 border-red-200' : 'bg-yellow-50 border-yellow-200' %> border rounded-lg">
              <div class="flex items-start">
                <svg class="w-5 h-5 <%= orderItem.status === 'return_accepted' ? 'text-green-600' : orderItem.status === 'return_rejected' ? 'text-red-600' : 'text-yellow-600' %> mt-0.5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z" clip-rule="evenodd"></path>
                </svg>
                <div>
                  <h4 class="font-semibold <%= orderItem.status === 'return_accepted' ? 'text-green-800' : orderItem.status === 'return_rejected' ? 'text-red-800' : 'text-yellow-800' %> mb-1">
                    <%= orderItem.status%>
                  </h4>
                  <p class="text-sm <%= orderItem.status === 'return_accepted' ? 'text-green-700' : orderItem.status === 'return_rejected' ? 'text-red-700' : 'text-yellow-700' %>">
                    <strong>Reason:</strong> <%= orderItem.cancellationReasonTitle %>
                  </p>
                  <% if (orderItem.cancellationReason && orderItem.cancellationReason !== '') { %>
                    <p class="text-sm <%= orderItem.status === 'return_accepted' ? 'text-green-700' : orderItem.status === 'return_rejected' ? 'text-red-700' : 'text-yellow-700' %> mt-1">
                      <strong>Additional Details:</strong> <%= orderItem.cancellationReason %>
                    </p>
                  <% } %>
                  <% if (orderItem.status === 'return_rejected' && orderItem.rejectionReason) { %>
                    <p class="text-sm text-red-700 mt-1">
                      <strong>Rejection Reason:</strong> <%= orderItem.rejectionReason %>
                    </p>
                  <% } %>
                </div>
              </div>
            </div>
          <% } %>
        </div>
        
        <% }); %>
      </div>
    </div>

    <!-- Order Summary & Customer Info -->
    <div class="space-y-6">
      <!-- Order Summary -->
      <div class="bg-white rounded-lg shadow-md p-6">
        <h2 class="text-xl font-semibold text-gray-800 mb-4">Order Summary</h2>
        
        <div class="space-y-3">
          <div class="flex justify-between text-gray-600">
            <span>Subtotal:</span>
            <span>₹<%= order.totalPrice.toLocaleString('en-IN') %></span>
          </div>
          
          <% if (order.discountAmount && order.discountAmount > 0) { %>
          <div class="flex justify-between text-green-600">
            <span>Discount:</span>
            <span>-₹<%= order.discountAmount.toLocaleString('en-IN') %></span>
          </div>
          <% } %>
          
          <% if (order.shippingCost && order.shippingCost > 0) { %>
          <div class="flex justify-between text-gray-600">
            <span>Shipping:</span>
            <span>₹<%= order.shippingCost.toLocaleString('en-IN') %></span>
          </div>
          <% } else { %>
            <div class="flex justify-between text-gray-600">
              <span>Shipping:</span>
              <span class="text-green-600">Free</span>
            </div>
          <% } %>
          
          <% if (order.taxAmount && order.taxAmount > 0) { %>
          <div class="flex justify-between text-gray-600">
            <span>Tax:</span>
            <span>₹<%= order.taxAmount.toLocaleString('en-IN') %></span>
          </div>
          <% } %>
          
          <div class="border-t pt-3">
            <div class="flex justify-between text-lg font-semibold text-gray-800">
              <span>Total:</span>
              <span>₹<%= order.finalAmount.toLocaleString('en-IN') %></span>
            </div>
          </div>
        </div>
      </div>

      <!-- Customer Information -->
      <div class="bg-white rounded-lg shadow-md p-6">
        <h2 class="text-xl font-semibold text-gray-800 mb-4">Customer Information</h2>
        
        <div class="space-y-4">
          <div>
            <h3 class="font-medium text-gray-700 mb-2">Contact Details</h3>
            <p class="text-gray-600"><%= user.name %></p>
            <p class="text-gray-600"><%= user.email %></p>
            <% if (user.phone) { %>
              <p class="text-gray-600"><%= user.phone %></p>
            <% } %>
          </div>
          <div>
            <h3 class="font-medium text-gray-700 mb-2">Shipping Address</h3>
            <div class="text-gray-600 text-sm leading-relaxed">
              <p><%= order.shippingAddress.title %></p>
              <p><%= order.shippingAddress.address %></p>
              <% if (order.shippingAddress.addressLine2) { %>
                <p><%= order.shippingAddress.addressLine2 %></p>
              <% } %>
              <p><%= order.shippingAddress.city %>, <%= order.shippingAddress.state %> <%= order.shippingAddress.pincode %></p>
              <p><%= order.shippingAddress.country %></p>
              <% if (order.shippingAddress.phone) { %>
                <p>Phone: <%= order.shippingAddress.phone %></p>
              <% } %>
            </div>
          </div>
          <div>
            <h3 class="font-medium text-gray-700 mb-2">Payment Method</h3>
            <div class="flex items-center">
              <% if (order.paymentMethod === 'CARD') { %>
                <svg class="w-5 h-5 text-blue-600 mr-2" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M4 4a2 2 0 00-2 2v1h16V6a2 2 0 00-2-2H4zM18 9H2v5a2 2 0 002 2h12a2 2 0 002-2V9zM4 13a1 1 0 011-1h1a1 1 0 110 2H5a1 1 0 01-1-1zm5-1a1 1 0 100 2h1a1 1 0 100-2H9z"></path>
                </svg>
                <span class="text-gray-600">Credit/Debit Card</span>
              <% } else if (order.paymentMethod === 'UPI') { %>
                <svg class="w-5 h-5 text-green-600 mr-2" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M4 4a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2H4zm0 2h12v8H4V6z" clip-rule="evenodd"></path>
                </svg>
                <span class="text-gray-600">UPI Payment</span>
              <% } else if (order.paymentMethod === 'COD') { %>
                <svg class="w-5 h-5 text-orange-600 mr-2" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z"></path>
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v.092a4.535 4.535 0 00-1.676.662C6.602 6.234 6 7.009 6 8c0 .99.602 1.765 1.324 2.246.48.32 1.054.545 1.676.662v1.941c-.391-.127-.68-.317-.843-.504a1 1 0 10-1.51 1.31c.562.649 1.413 1.076 2.353 1.253V15a1 1 0 102 0v-.092a4.535 4.535 0 001.676-.662C13.398 13.766 14 12.991 14 12c0-.99-.602-1.765-1.324-2.246A4.535 4.535 0 0011 9.092V7.151c.391.127.68.317.843.504a1 1 0 101.511-1.31c-.563-.649-1.413-1.076-2.354-1.253V5z" clip-rule="evenodd"></path>
                </svg>
                <span class="text-gray-600">Cash on Delivery</span>
              <% } else { %>
                <span class="text-gray-600"><%= order.paymentMethod %></span>
              <% } %>
            </div>
            
            <div class="mt-2">
              <span class="inline-block px-2 py-1 rounded text-xs font-medium
                <%= order.paymentStatus === 'paid' ? 'bg-green-100 text-green-800' :
                    order.paymentStatus === 'pending' ? 'bg-yellow-100 text-yellow-800' :
                    order.paymentStatus === 'failed' ? 'bg-red-100 text-red-800' :
                    'bg-gray-100 text-gray-800' %>">
                Payment <%= order.paymentStatus %>
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Modal for Cancel/Return -->
<div id="reasonModal" class="fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center hidden z-50">
  <div class="bg-white p-6 rounded-lg shadow-xl w-full max-w-md mx-4">
    <h2 id="modalTitle" class="text-xl font-bold mb-4 text-gray-800">Reason</h2>
    <form id="actionForm">
      <div class="mb-4">
        <label class="block mb-2 font-medium text-gray-700">Select Reason</label>
        <select id="reasonSelect" class="w-full border border-gray-300 px-3 py-2 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" required>
          <option value="">-- Select Reason --</option>
        </select>
      </div>
      <div class="mb-6">
        <label class="block mb-2 font-medium text-gray-700">Additional Details</label>
        <textarea id="customReason" class="w-full border border-gray-300 px-3 py-2 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" rows="3" placeholder="Please provide additional details (optional)..."></textarea>
      </div>
      <input type="hidden" name="orderId" id="hiddenOrderId">
      <input type="hidden" name="itemId" id="hiddenItemId">
      <input type="hidden" name="actionType" id="hiddenActionType">
      <div class="flex justify-end space-x-3">
        <button type="button" onclick="closeModal()" class="px-4 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400 transition">
          Cancel
        </button>
        <button id="submitReasonButton" type="button" class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition">
          Confirm
        </button>
      </div>
    </form>
  </div>
</div>

<!-- Include SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
  const RETURN_REASONS = <%- JSON.stringify(returnReasons || []) %>;
  const CANCEL_REASONS = <%- JSON.stringify(cancelReasons || []) %>;

function openModal(actionType, orderId, itemId) {
  const modal = document.getElementById('reasonModal');
  const title = document.getElementById('modalTitle');
  const submitBtn = document.getElementById('submitReasonButton');
  const hiddenOrderId = document.getElementById('hiddenOrderId');
  const hiddenItemId = document.getElementById('hiddenItemId');
  const hiddenActionType = document.getElementById('hiddenActionType');
  const reasonSelect = document.getElementById('reasonSelect');

  // Set modal title
  title.textContent = actionType === 'cancel' ? 'Reason for Cancellation' : 'Reason for Return';

  // Set hidden fields
  hiddenOrderId.value = orderId;
  hiddenItemId.value = itemId;
  hiddenActionType.value = actionType;

  // Clear existing options and repopulate based on actionType
  reasonSelect.innerHTML = '<option value="">-- Select Reason --</option>';
  const reasons = actionType === 'cancel' ? CANCEL_REASONS : RETURN_REASONS;
  
  if (Array.isArray(reasons)) {
    reasons.forEach(reason => {
      const option = document.createElement('option');
      option.value = reason;
      option.textContent = reason;
      reasonSelect.appendChild(option);
    });
  }

  // Show modal
  modal.classList.remove('hidden');

  // Handle submit
  submitBtn.onclick = async function () {
    const reasonTitle = reasonSelect.value.trim();
    const reason = document.getElementById('customReason').value.trim();

    if (!reasonTitle) {
      Swal.fire({
        title: 'Error',
        text: 'Please select a reason.',
        icon: 'error',
        confirmButtonColor: '#374151'
      });
      return;
    }

    const requestBody = {
      orderId,
      itemId,
      action:actionType,
      type:'item',
      reasonTitle,
      reason
    };

    submitBtn.disabled = true;
    submitBtn.textContent = 'Submitting...';

    try {
      const res = await fetch(`/orders/action`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(requestBody)
      });

      const data = await res.json();

      if (data.success) {
        Swal.fire({
          title: 'Success',
          text: data.message || (actionType === 'cancel' ? 'Cancellation request submitted!' : 'Return request submitted!'),
          icon: 'success',
          confirmButtonColor: '#374151'
        }).then(() => {
          closeModal();
          location.reload();
        });
      } else {
        Swal.fire({
          title: 'Error',
          text: data.message || 'Something went wrong.',
          icon: 'error',
          confirmButtonColor: '#374151'
        });
      }
    } catch (err) {
      console.error('Error submitting request:', err);
      Swal.fire({
        title: 'Error',
        text: 'An error occurred while submitting the request.',
        icon: 'error',
        confirmButtonColor: '#374151'
      });
    } finally {
      submitBtn.disabled = false;
      submitBtn.textContent = 'Confirm';
    }
  };
}

function closeModal() {
  document.getElementById('reasonModal').classList.add('hidden');
  document.getElementById('actionForm').reset();
}

// Download Complete Invoice
function downloadCompleteInvoice(orderId) {
  Swal.fire({
    title: 'Generating PDF...',
    text: 'Please wait while we prepare your complete invoice.',
    allowOutsideClick: false,
    showConfirmButton: false,
    willOpen: () => {
      Swal.showLoading();
    }
  });

  // Create form for PDF download
  const form = document.createElement('form');
  form.method = 'GET';
  form.action = `/invoice/full/download/${orderId}`;
  form.style.display = 'none';

  // Add order ID
  const orderIdInput = document.createElement('input');
  orderIdInput.type = 'hidden';
  orderIdInput.name = 'orderId';
  orderIdInput.value = '<%= order._id %>';
  form.appendChild(orderIdInput);

  // Add invoice type
  const typeInput = document.createElement('input');
  typeInput.type = 'hidden';
  typeInput.name = 'invoiceType';
  typeInput.value = 'order';
  form.appendChild(typeInput);

  document.body.appendChild(form);
  form.submit();
  document.body.removeChild(form);

  setTimeout(() => {
    Swal.close();
    Swal.fire({
      icon: 'success',
      title: 'PDF Generated!',
      text: 'Your complete invoice has been downloaded.',
      timer: 2000,
      showConfirmButton: false
    });
  }, 2000);
}

// Download Item Invoice
function downloadItemInvoice(itemId) {
  Swal.fire({
    title: 'Generating PDF...',
    text: 'Please wait while we prepare your item invoice.',
    allowOutsideClick: false,
    showConfirmButton: false,
    willOpen: () => {
      Swal.showLoading();
    }
  });

  // Create form for PDF download
  const form = document.createElement('form');
  form.method = 'POST';
  form.action = '/invoice/download';
  form.style.display = 'none';

  // Add order ID
  const orderIdInput = document.createElement('input');
  orderIdInput.type = 'hidden';
  orderIdInput.name = 'orderId';
  orderIdInput.value = '<%= order._id %>';
  form.appendChild(orderIdInput);

  // Add invoice type
  const typeInput = document.createElement('input');
  typeInput.type = 'hidden';
  typeInput.name = 'invoiceType';
  typeInput.value = 'item';
  form.appendChild(typeInput);

  // Add item ID
  const itemIdInput = document.createElement('input');
  itemIdInput.type = 'hidden';
  itemIdInput.name = 'itemId';
  itemIdInput.value = itemId;
  form.appendChild(itemIdInput);

  document.body.appendChild(form);
  form.submit();
  document.body.removeChild(form);

  setTimeout(() => {
    Swal.close();
    Swal.fire({
      icon: 'success',
      title: 'PDF Generated!',
      text: 'Your item invoice has been downloaded.',
      timer: 2000,
      showConfirmButton: false
    });
  }, 2000);
}

// Email Invoice
function emailInvoice() {
  Swal.fire({
    title: 'Send Invoice via Email?',
    text: 'The complete invoice will be sent to your registered email address.',
    icon: 'question',
    showCancelButton: true,
    confirmButtonColor: '#10b981',
    cancelButtonColor: '#6b7280',
    confirmButtonText: 'Yes, Send Email',
    cancelButtonText: 'Cancel'
  }).then((result) => {
    if (result.isConfirmed) {
      // Show loading
      Swal.fire({
        title: 'Sending Email...',
        text: 'Please wait while we send your invoice.',
        allowOutsideClick: false,
        showConfirmButton: false,
        willOpen: () => {
          Swal.showLoading();
        }
      });

      // Make API call to send email
      fetch('/invoice/email', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          orderId: '<%= order._id %>',
          invoiceType: 'order'
        })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          Swal.fire({
            icon: 'success',
            title: 'Email Sent!',
            text: 'Invoice has been sent to your email address.',
            confirmButtonColor: '#10b981'
          });
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Email Failed',
            text: data.message || 'Failed to send email. Please try again.',
            confirmButtonColor: '#ef4444'
          });
        }
      })
      .catch(error => {
        console.error('Error sending email:', error);
        Swal.fire({
          icon: 'error',
          title: 'Email Failed',
          text: 'An error occurred while sending the email.',
          confirmButtonColor: '#ef4444'
        });
      });
    }
  });
}

// Close modal when clicking outside
document.getElementById('reasonModal').addEventListener('click', function(e) {
  if (e.target === this) {
    closeModal();
  }
});

// Close modal with Escape key
document.addEventListener('keydown', function(e) {
  if (e.key === 'Escape') {
    closeModal();
  }
});
</script>

<%- include('../../views/partials/user/footer') %>
