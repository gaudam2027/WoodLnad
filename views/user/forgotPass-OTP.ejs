<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Verify OTP - Forgot Password</title>
  <link rel="stylesheet" href="/css/output.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Raleway:wght@400;600;800&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
  <style>
    .otp-input::-webkit-inner-spin-button,
    .otp-input::-webkit-outer-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }
    .otp-input {
      font-variant-numeric: tabular-nums;
      transition: all 0.2s ease;
    }
    .otp-input:focus {
      transform: scale(1.05);
    }
  </style>
</head>
<body class="flex flex-col min-h-screen bg-gray-900 font-sans">

  <!-- Navigation -->
  
  <nav class="absolute top-0 left-0 w-full bg-white shadow-md flex justify-center items-center z-20 h-16">
      <a href="/">
      <div class="text-2xl font-bold text-gray-800 flex items-center" style="font-family: 'Raleway', sans-serif;">
        <img src="./images/logo.png" class="logo bgImg h-10 w-auto" alt="logo">
        <div class="pl-3">WOODLAND</div>
      </div>
    </a>
  </nav>

  <!-- Page Wrapper -->
  <div class="flex-grow relative flex flex-col items-center justify-center pt-20">
    <div class="absolute inset-0 bg-cover bg-center" style="background-image: url('/images/signUpBg.jpg');">
      <div class="absolute inset-0 bg-black bg-opacity-70"></div>
    </div>

    <!-- OTP Form Card -->
    <div class="relative z-10 bg-gray-200 p-10 rounded-2xl shadow-2xl w-full max-w-sm opacity-95 min-h-[420px] flex flex-col justify-between">
      <div>
        <h2 class="text-2xl font-bold text-center text-gray-800 mb-2">Verify OTP - Forgot Password</h2>
        <p class="text-sm text-center text-gray-600 mb-6">Enter the 6-digit OTP sent to your registered email/phone to reset your password</p>

        <form id="otp-form" onsubmit="return validateOTPForm(event)" class="space-y-6">
          <div class="flex justify-between items-center gap-2 mb-3">
            <input type="number" maxlength="1" class="otp-input w-12 h-14 text-center text-2xl border border-gray-400 rounded-xl focus:ring-2 focus:ring-gray-500 focus:outline-none bg-white shadow-sm" required />
            <input type="number" maxlength="1" class="otp-input w-12 h-14 text-center text-2xl border border-gray-400 rounded-xl focus:ring-2 focus:ring-gray-500 focus:outline-none bg-white shadow-sm" required />
            <input type="number" maxlength="1" class="otp-input w-12 h-14 text-center text-2xl border border-gray-400 rounded-xl focus:ring-2 focus:ring-gray-500 focus:outline-none bg-white shadow-sm" required />
            <input type="number" maxlength="1" class="otp-input w-12 h-14 text-center text-2xl border border-gray-400 rounded-xl focus:ring-2 focus:ring-gray-500 focus:outline-none bg-white shadow-sm" required />
            <input type="number" maxlength="1" class="otp-input w-12 h-14 text-center text-2xl border border-gray-400 rounded-xl focus:ring-2 focus:ring-gray-500 focus:outline-none bg-white shadow-sm" required />
            <input type="number" maxlength="1" class="otp-input w-12 h-14 text-center text-2xl border border-gray-400 rounded-xl focus:ring-2 focus:ring-gray-500 focus:outline-none bg-white shadow-sm" required />
          </div>

          <div class="text-center mb-2">
            <span class="text-sm text-gray-700">Time left:</span>
            <span id="countdown" class="inline-block ml-2 bg-white px-3 py-1 rounded-full text-sm font-semibold text-gray-900 shadow-sm">01:00</span>
          </div>

          <button type="submit" class="w-full bg-gray-800 text-white py-3 rounded-xl hover:bg-gray-700 transition duration-300">
            Verify OTP
          </button>
        </form>
      </div>

      <div class="mt-6 text-center">
        <p class="text-sm text-gray-600 mb-1">Didn't receive the code?</p>
        <button onclick="resendOTP()" id="resendBtn" class="text-grey-700 hover:underline">Resend OTP</button>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    const inputs = document.querySelectorAll('.otp-input');

    inputs.forEach((input, i) => {
      input.addEventListener('input', () => {
        if (input.value.length === 1 && i < inputs.length - 1) {
          inputs[i + 1].focus();
        }
      });

      input.addEventListener('keydown', (e) => {
        if (e.key === "Backspace" && input.value === '' && i > 0) {
          inputs[i - 1].focus();
        }
      });

      input.addEventListener('paste', (e) => {
        e.preventDefault();
        const paste = (e.clipboardData || window.clipboardData).getData('text');
        const digits = paste.replace(/\D/g, '');

        digits.split('').forEach((digit, index) => {
          if (inputs[i + index]) {
            inputs[i + index].value = digit;
          }
        });

        for (let j = i; j < inputs.length; j++) {
          if (inputs[j].value === '') {
            inputs[j].focus();
            break;
          }
        }
      });
    });

    let seconds = 60;
    let isOTPExpired = false;
    const countdown = document.getElementById('countdown');

    function updateTimer() {
      if (seconds > 0) {
        resendBtn.disabled = true;
        resendBtn.classList.remove('text-gray-700', 'hover:underline');
        resendBtn.classList.add('text-gray-300', 'cursor-not-allowed');
        const min = String(Math.floor(seconds / 60)).padStart(2, '0');
        const sec = String(seconds % 60).padStart(2, '0');
        countdown.textContent = `${min}:${sec}`;
        seconds--;
      } else {
        clearInterval(timerInterval);
        isOTPExpired = true;
        countdown.textContent = 'OTP Expired';
        countdown.classList.add('font-semibold');
        resendBtn.disabled = false;
        resendBtn.classList.remove('text-gray-300', 'cursor-not-allowed');
        resendBtn.classList.add('text-gray-700', 'hover:underline');
      }
    }

    let timerInterval = setInterval(updateTimer, 1000);
    updateTimer();

    async function validateOTPForm(event) {
      event.preventDefault();

      if (isOTPExpired) {
        Swal.fire({
          icon: 'warning',
          title: 'OTP Expired',
          text: 'Your OTP has expired. Please resend it.',
          confirmButtonColor: '#d33'
        });
        return;
      }

      let otp = '';
      let allFilled = true;

      inputs.forEach(input => {
        if (input.value === '') allFilled = false;
        otp += input.value;
      });

      if (!allFilled || otp.length !== 6) {
        Swal.fire({
          icon: 'error',
          title: 'Incomplete OTP',
          text: 'Please enter all 6 digits.',
          confirmButtonColor: '#d33'
        });
        return;
      }

      try {
        const response = await fetch('/verifyForgotPasss-OTP', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ otp }),
        });

        const data = await response.json();

        if (data.success) {
          Swal.fire({
            icon: 'success',
            title: 'Verified!',
            text: 'OTP verified successfully.',
            confirmButtonColor: '#3085d6'
          }).then(() => {
            window.location.href = data.redirect;;
          });
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Invalid OTP',
            text: data.message || 'Invalid OTP. Please try again.',
            confirmButtonColor: '#d33'
          });
        }
      } catch (error) {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: 'An error occurred. Please try again later.',
          confirmButtonColor: '#d33'
        });
      }
    }

    async function resendOTP() {
      try {
        const response = await fetch('/resendforgotPass-Otp', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
        });

        const data = await response.json();

        if (data.success) {
          Swal.fire({
            icon: 'success',
            title: 'OTP Resent',
            text: 'A new OTP has been sent to your email/phone.',
            confirmButtonColor: '#3085d6',
            customClass: {
              popup: 'swal-rounded'
            }
          });

          // Reset timer and fields
          seconds = 60;
          isOTPExpired = false;
          clearInterval(timerInterval);
          updateTimer();
          timerInterval = setInterval(updateTimer, 1000);
          inputs.forEach(input => input.value = '');
          inputs[0].focus();
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Failed to Resend',
            text: data.message || 'Could not resend OTP.',
            confirmButtonColor: '#d33',
          });
        }
      } catch (error) {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: 'Something went wrong. Please try again later.',
          confirmButtonColor: '#d33'
        });
      }
    }
  </script>
</body>
</html>
