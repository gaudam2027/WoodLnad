<link rel="stylesheet" href="./css/profile.css">
<%- include('../../views/partials/user/header') %>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" />

<style>
  .swal2-popup {
    border-radius: .7rem !important;
  }
  .swal2-title {
    font-size: 20px !important;
  }

  #toaster {
    position: fixed;
    top: 20px;
    right: 20px;
    padding: 12px 20px;
    border-radius: 8px;
    font-size: 14px;
    z-index: 9999;
    opacity: 0;
    transform: translateY(-20px);
    transition: all 0.3s ease;
    color: white;
  }

  #toaster.show {
    opacity: 1;
    transform: translateY(0);
  }

  #toaster.success {
    background-color: #38a169;
  }

  #toaster.error {
    background-color: #e53e3e;
  }

  /* Fixed Mobile Menu Button */
  #mobileMenuToggle {
    position: fixed;
    left: 20px;
    top: 50%;
    transform: translateY(-50%);
    width: 60px;
    height: 60px;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border: 2px solid rgba(0, 0, 0, 0.1);
    border-radius: 50%;
    display: none;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 1001;
    transition: all 0.3s ease;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  }

  /* Show only on mobile screens */
  @media (max-width: 767px) {
    #mobileMenuToggle {
      display: flex !important;
    }
  }

  #mobileMenuToggle:hover {
    background: rgba(255, 255, 255, 1);
    border-color: rgba(0, 0, 0, 0.2);
    box-shadow: 0 6px 25px rgba(0, 0, 0, 0.15);
    transform: translateY(-50%) scale(1.05);
  }

  #mobileMenuToggle i {
    color: #374151;
    font-size: 1.8rem;
    transition: all 0.3s ease;
  }

  /* Fixed Sidebar Overlay */
  .sidebar-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(4px);
    z-index: 1000;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
  }

  .sidebar-overlay.show {
    opacity: 1;
    visibility: visible;
  }

  .mobile-sidebar {
    position: fixed;
    top: 0;
    left: 0;
    width: 320px;
    height: 100%;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(20px);
    transform: translateX(-100%);
    transition: transform 0.3s ease-in-out;
    z-index: 1001;
    border-radius: 0 20px 20px 0;
    overflow-y: auto;
  }

  .mobile-sidebar.open {
    transform: translateX(0);
  }

  /* Profile container and other styles */
  .profile-container {
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
    min-height: 100vh;
    padding-top: 80px;
  }

  .glass-card {
    background: rgba(255, 255, 255, 0.25);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.3);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
  }

  .profile-img {
    width: 120px;
    height: 120px;
    border-radius: 50%;
    object-fit: cover;
    border: 4px solid rgba(255, 255, 255, 0.5);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
  }

  .menu-item {
    transition: all 0.3s ease;
    border-radius: 12px;
    margin-bottom: 8px;
  }

  .menu-item:hover {
    background: rgba(55, 65, 81, 0.1);
    transform: translateX(8px);
  }

  .menu-item.active {
    background: linear-gradient(135deg, #374151 0%, #4b5563 100%);
    color: white;
    box-shadow: 0 4px 15px rgba(55, 65, 81, 0.3);
  }

  /* Address specific styles */
  .address-card {
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.4);
    border-radius: 16px;
    transition: all 0.3s ease;
    margin-bottom: 20px;
  }

  .address-card:hover {
    background: rgba(255, 255, 255, 1);
    transform: translateY(-4px);
    box-shadow: 0 12px 30px rgba(0, 0, 0, 0.1);
  }

  .address-type-badge {
    padding: 4px 10px;
    border-radius: 20px;
    font-size: 11px;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    display: inline-flex;
    align-items: center;
    gap: 4px;
  }

  .three-dot-btn {
    padding: 8px;
    border-radius: 50%;
    transition: all 0.3s ease;
    background: rgba(255, 255, 255, 0.8);
    backdrop-filter: blur(10px);
  }

  .three-dot-btn:hover {
    background: rgba(255, 255, 255, 1);
    transform: scale(1.1);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  }

  .dropdown-menu {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 12px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
  }

  .add-address-btn {
    background: linear-gradient(135deg, #374151 0%, #4b5563 100%);
    color: white;
    padding: 12px 24px;
    border-radius: 12px;
    font-weight: 600;
    border: none;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(55, 65, 81, 0.3);
  }

  .add-address-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(55, 65, 81, 0.4);
  }

  .contact-info-section {
    background: rgba(249, 250, 251, 0.8);
    backdrop-filter: blur(5px);
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 12px;
    padding: 16px;
  }

  .modal-overlay {
    backdrop-filter: blur(12px);
    background: rgba(0, 0, 0, 0.6);
  }

  /* Improved Modal Styling */
  .modal-content {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(30px);
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 20px;
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
    animation: modalSlideIn 0.3s ease;
    width: 100%;
    max-width: 520px; /* Reduced from 600px to avoid horizontal scroll */
    padding: 24px 20px; /* Balanced padding */
    font-size: 15px; /* Medium font size */
    box-sizing: border-box;
    max-height: 85vh; /* Prevent modal from being too tall */
  }

  /* Modal form inputs and textareas */
  .modal-content input[type="text"],
  .modal-content input[type="email"],
  .modal-content textarea {
    font-size: 14px;
    padding: 10px 12px; /* Reduced padding for better fit */
    border-radius: 10px;
    border: 2px solid rgba(209, 213, 219, 0.8);
    transition: all 0.3s ease;
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(5px);
  }

  .modal-content input[type="text"]:focus,
  .modal-content input[type="email"]:focus,
  .modal-content textarea:focus {
    border-color: #3b82f6;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
    background: rgba(255, 255, 255, 1);
    outline: none;
  }

  /* Modal labels */
  .modal-content label {
    font-size: 13px;
    font-weight: 600;
    color: #374151;
    margin-bottom: 6px;
    display: block;
  }

  /* Modal grid adjustments */
  .modal-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 16px;
  }

  @media (min-width: 640px) {
    .modal-grid {
      grid-template-columns: 1fr 1fr;
    }
    .modal-grid .col-span-2 {
      grid-column: span 2;
    }
  }

  /* Modal buttons */
  .modal-btn {
    padding: 10px 20px;
    border-radius: 10px;
    font-weight: 600;
    font-size: 14px;
    transition: all 0.3s ease;
    border: none;
    cursor: pointer;
  }

  .modal-btn-primary {
    background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
    color: white;
    box-shadow: 0 4px 15px rgba(59, 130, 246, 0.3);
  }

  .modal-btn-primary:hover {
    transform: translateY(-1px);
    box-shadow: 0 6px 20px rgba(59, 130, 246, 0.4);
  }

  .modal-btn-secondary {
    background: linear-gradient(135deg, #6b7280 0%, #4b5563 100%);
    color: white;
    box-shadow: 0 4px 15px rgba(107, 114, 128, 0.3);
  }

  .modal-btn-secondary:hover {
    transform: translateY(-1px);
    box-shadow: 0 6px 20px rgba(107, 114, 128, 0.4);
  }

  /* Radio button styling */
  .radio-group {
    display: flex;
    gap: 16px;
    flex-wrap: wrap;
  }

  .radio-item {
    display: flex;
    align-items: center;
    gap: 6px;
    font-size: 14px;
    color: #374151;
  }

  @keyframes modalSlideIn {
    from {
      opacity: 0;
      transform: scale(0.95) translateY(-10px);
    }
    to {
      opacity: 1;
      transform: scale(1) translateY(0);
    }
  }

  /* Responsive breakpoints */
  @media (max-width: 768px) {
    .profile-container {
      padding-top: 60px;
    }
    
    .profile-img {
      width: 100px;
      height: 100px;
    }

    #mobileMenuToggle {
      left: 15px;
      width: 50px;
      height: 50px;
    }

    #mobileMenuToggle i {
      font-size: 1.5rem;
    }

    .mobile-sidebar {
      width: 280px;
    }

    /* Mobile modal adjustments */
    .modal-content {
      max-width: 95vw;
      padding: 20px 16px;
      font-size: 14px;
      margin: 10px;
    }

    .modal-grid {
      grid-template-columns: 1fr;
      gap: 12px;
    }

    .radio-group {
      flex-direction: column;
      gap: 10px;
    }
  }

  @media (max-width: 480px) {
    #mobileMenuToggle {
      left: 10px;
      width: 45px;
      height: 45px;
    }

    #mobileMenuToggle i {
      font-size: 1.2rem;
    }

    .mobile-sidebar {
      width: 260px;
    }

    .modal-content {
      max-width: 92vw;
      padding: 16px 12px;
    }
  }
</style>

<div class="profile-container">
  <div class="container mx-auto px-4 py-6">
    
    <!-- Fixed Mobile Menu Toggle -->
    <button id="mobileMenuToggle">
      <i class="fas fa-chevron-right"></i>
    </button>

    <!-- Mobile Header -->
    <div class="block sm:hidden text-center mb-8">
      <h1 class="text-2xl font-bold text-gray-800 mb-2" style="font-family: 'Raleway', sans-serif;">Manage Addresses</h1>
      <p class="text-gray-600">Add and manage your delivery addresses</p>
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-4 gap-6">
      
      <!-- Desktop Sidebar - Same as Profile Page -->
      <div class="hidden lg:block">
        <div class="glass-card p-6 rounded-2xl sticky top-6">
          <div class="text-center mb-6">
            <img src="<%= user.profileImage || '/images/default-avatar.png' %>" alt="Profile" class="profile-img mx-auto mb-4">
            <h3 class="text-xl font-bold text-gray-800 mb-1" style="font-family: 'Raleway', sans-serif;"><%= user.name %></h3>
            <p class="text-sm text-gray-600">Member since <%= new Date(user.createdOn).getFullYear() %></p>
          </div>
          
          <nav class="space-y-2">
            <a href="/profile" class="menu-item flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-user mr-3"></i>Profile
            </a>
            <a href="/order" class="menu-item flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-shopping-bag mr-3"></i>My Orders
            </a>
            <a href="/address" class="menu-item active flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-map-marker-alt mr-3"></i>Addresses
            </a>
            <a href="/wishlist" class="menu-item flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-heart mr-3"></i>Wishlist
            </a>
            <a href="/wallet" class="menu-item flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-wallet mr-3"></i>Wallet
            </a>
          </nav>
          
          <button onclick="logout()" class="w-full mt-6 bg-gray-800 text-white py-3 px-4 rounded-xl hover:bg-gray-700 transition font-medium flex items-center justify-center">
            <i class="fas fa-sign-out-alt mr-2"></i>Logout
          </button>
        </div>
      </div>

      <!-- Fixed Mobile Sidebar Overlay -->
      <div id="sidebarOverlay" class="sidebar-overlay">
        <div id="mobileSidebar" class="mobile-sidebar">
          <div class="flex items-center justify-between mb-6 p-6">
            <h2 class="text-xl font-bold text-gray-800" style="font-family: 'Raleway', sans-serif;">Menu</h2>
            <button id="closeSidebar" class="p-2 hover:bg-gray-100 rounded-lg transition-colors">
              <i class="fas fa-times text-gray-600 text-xl"></i>
            </button>
          </div>

          <div class="text-center mb-6 px-6">
            <img src="<%= user.profileImage || '/images/default-avatar.png' %>" alt="Profile" class="profile-img mx-auto mb-4">
            <h3 class="text-lg font-bold text-gray-800 mb-1"><%= user.name %></h3>
            <p class="text-sm text-gray-600">Member since <%= new Date(user.createdOn).getFullYear() %></p>
          </div>
          
          <nav class="space-y-3 px-6">
            <a href="/profile" class="menu-item flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-user mr-3"></i>Profile
            </a>
            <a href="/order" class="menu-item flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-shopping-bag mr-3"></i>My Orders
            </a>
            <a href="/address" class="menu-item active flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-map-marker-alt mr-3"></i>Addresses
            </a>
            <a href="/wishlist" class="menu-item flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-heart mr-3"></i>Wishlist
            </a>
            <a href="/wallet" class="menu-item flex items-center py-3 px-4 text-gray-700 font-medium">
              <i class="fas fa-wallet mr-3"></i>Wallet
            </a>
          </nav>
          
          <div class="px-6 mt-8">
            <button onclick="logout()" class="w-full bg-gray-800 text-white py-3 px-4 rounded-xl hover:bg-gray-700 transition font-medium flex items-center justify-center">
              <i class="fas fa-sign-out-alt mr-2"></i>Logout
            </button>
          </div>
        </div>
      </div>

      <!-- Main Content - Address Management -->
      <div class="lg:col-span-3 space-y-6">
        
        <!-- Address Management Card -->
        <div class="glass-card p-6 md:p-8 rounded-2xl">
          <div class="flex flex-col md:flex-row md:items-center md:justify-between mb-8">
            <div>
              <h2 class="text-2xl font-bold text-gray-800 mb-2" style="font-family: 'Raleway', sans-serif;">Manage Addresses</h2>
              <p class="text-gray-600">Add and manage your delivery addresses</p>
            </div>
            
            <!-- Add Address Button -->
            <div class="mt-4 md:mt-0">
              <button onclick="openModal()" class="add-address-btn">
                <i class="fas fa-plus mr-2"></i>Add Address
              </button>
            </div>
          </div>

          <% if (!addresses || addresses.length === 0) { %>
            <div class="text-center py-16">
              <div class="w-20 h-20 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6">
                <i class="fas fa-map-marker-alt text-gray-400 text-3xl"></i>
              </div>
              <h3 class="text-xl font-semibold text-gray-800 mb-2">No Addresses Found</h3>
              <p class="text-gray-600 mb-6">Please add your address to proceed with orders.</p>
              <button onclick="openModal()" class="add-address-btn">
                <i class="fas fa-plus mr-2"></i>Add Your First Address
              </button>
            </div>
          <% } else { %>
            <!-- Address Cards -->
            <div class="space-y-6">
              <% addresses.forEach(address => { %>
                <div class="address-card p-6 relative">
                  <!-- Three-dot Action Menu -->
                  <div class="absolute top-4 right-4">
                    <div class="relative inline-block text-left">
                      <button class="three-dot-btn focus:outline-none">
                        <i class="fas fa-ellipsis-v text-gray-500"></i>
                      </button>
                      <div class="dropdown-menu absolute right-0 mt-2 w-32 hidden z-10">
                        <a class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 rounded-t-lg edit-address cursor-pointer"
                           data-id="<%= address._id %>"
                           data-title="<%= address.title %>"
                           data-addressType="<%= address.addressType %>"
                           data-city="<%= address.city %>"
                           data-state="<%= address.state %>"
                           data-address="<%= address.address %>"
                           data-landmark="<%= address.landmark %>"
                           data-pincode="<%= address.pincode %>"
                           data-phone="<%= address.phone %>"
                           data-altphone="<%= address.altPhone %>"
                           data-email="<%= address.email %>">
                          <i class="fas fa-edit mr-2"></i>Edit
                        </a>
                        <a href="#" onclick="deleteAddress('<%= address._id %>')" class="block px-4 py-2 text-sm text-red-600 hover:bg-gray-100 rounded-b-lg">
                          <i class="fas fa-trash mr-2"></i>Delete
                        </a>
                      </div>
                    </div>
                  </div>

                  <!-- Title and Type with Icon -->
                  <div class="mb-4 flex items-center">
                    <h3 class="text-lg font-bold text-gray-800"><%= address.title %></h3>
                    <span class="ml-3 address-type-badge
                              <% if (address.addressType === 'home') { %>
                                bg-blue-100 text-blue-700
                              <% } else if (address.addressType === 'work') { %>
                                bg-red-100 text-red-700
                              <% } else { %>
                                bg-yellow-100 text-yellow-700
                              <% } %>">
                      <!-- Icon based on address type -->
                      <% if (address.addressType === 'home') { %>
                        <i class="fas fa-home"></i>
                      <% } else if (address.addressType === 'work') { %>
                        <i class="fas fa-briefcase"></i>
                      <% } else { %>
                        <i class="fas fa-map-marker-alt"></i>
                      <% } %>
                      <%= address.addressType %>
                    </span>
                  </div>

                  <!-- Contact Info Section -->
                  <div class="mb-4 contact-info-section">
                    <div class="flex items-start gap-3 mb-3">
                      <i class="fas fa-phone text-gray-500 mt-0.5"></i>
                      <div>
                        <p class="text-sm text-gray-600"><span class="font-medium">Phone:</span> <%= address.phone %></p>
                        <% if (address.altPhone) { %>
                        <p class="text-sm text-gray-600"><span class="font-medium">Alt:</span> <%= address.altPhone %></p>
                        <% } %>
                      </div>
                    </div>

                    <div class="flex items-start gap-3">
                      <i class="fas fa-envelope text-gray-500 mt-0.5"></i>
                      <p class="text-sm text-gray-600"><span class="font-medium">Email:</span> <%= address.email %></p>
                    </div>
                  </div>

                  <!-- Address Info Section -->
                  <div class="border-l-4 border-gray-300 pl-4 space-y-1 text-sm text-gray-700">
                    <div class="flex items-start gap-2">
                      <i class="fas fa-map-marker-alt text-gray-500 flex-shrink-0 mt-0.5"></i>
                      <div>
                        <p><%= address.address %></p>
                        <% if (address.landmark) { %>
                        <p class="mt-1"><span class="font-medium">Landmark:</span> <%= address.landmark %></p>
                        <% } %>
                        <p class="mt-1"><%= address.city %>, <%= address.state %> - <%= address.pincode %></p>
                      </div>
                    </div>
                  </div>
                </div>
              <% }); %>
            </div>

            <!-- Pagination -->
            <% if (totalPages > 1) { %>
              <div class="flex justify-center space-x-2 mt-8">
                <% 
                  const start = Math.max(currentPage - 2, 1);
                  let end = Math.min(start + 4, totalPages);
                  const adjustedStart = Math.max(end - 4, 1);
                %>
                
                <% if (totalPages > 5 && currentPage > 1) { %>
                  <a href="?page=<%= currentPage - 1 %>" class="px-4 py-2 rounded-lg bg-gray-500 text-white hover:bg-gray-600 transition">
                    Previous
                  </a>
                <% } %>

                <% for (let i = adjustedStart; i <= end; i++) { %>
                  <a href="?page=<%= i %>" 
                    class="px-4 py-2 rounded-lg transition 
                      <%= i === currentPage ? 'bg-gray-800 text-white' : 'bg-white text-gray-800 hover:bg-gray-100 border border-gray-300' %>">
                    <%= i %>
                  </a>
                <% } %>

                <% if (totalPages > 5 && currentPage < totalPages) { %>
                  <a href="?page=<%= currentPage + 1 %>" class="px-4 py-2 rounded-lg bg-gray-500 text-white hover:bg-gray-600 transition">
                    Next
                  </a>
                <% } %>
              </div>
            <% } %>
          <% } %>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Improved Add/Edit Address Modal -->
<div id="addressModal" class="fixed inset-0 modal-overlay flex items-center justify-center z-50 hidden">
  <div class="modal-content relative">
    
    <!-- Close Button -->
    <button onclick="closeModal()" class="absolute top-4 right-4 w-8 h-8 flex items-center justify-center rounded-full bg-gray-100 hover:bg-gray-200 text-gray-600 hover:text-red-500 transition-all">
      <i class="fas fa-times text-sm"></i>
    </button>
    
    <!-- Modal Header -->
    <div class="mb-6">
      <h2 class="text-xl font-bold text-gray-800" style="font-family: 'Raleway', sans-serif;">Add New Address</h2>
      <p class="text-gray-600 text-sm mt-1">Fill in the details below to add your address</p>
    </div>

    <!-- Scrollable Content -->
    <div class="overflow-y-auto" style="max-height: calc(85vh - 140px);">
      
      <!-- Address Fields -->
      <div class="modal-grid mb-6">
        <input type="hidden" id="editingAddressId" name="editingAddressId">

        <div>
          <label for="addressTitle">Address Title</label>
          <input id="addressTitle" type="text" placeholder="e.g. My Home">
        </div>

        <div>
          <label>Address Type</label>
          <div class="radio-group mt-2">
            <label class="radio-item">
              <input type="radio" name="type" value="home" id="typeHome">
              <i class="fas fa-home text-blue-600"></i>Home
            </label>
            <label class="radio-item">
              <input type="radio" name="type" value="work" id="typeWork">
              <i class="fas fa-briefcase text-red-600"></i>Work
            </label>
            <label class="radio-item">
              <input type="radio" name="type" value="other" id="typeOther">
              <i class="fas fa-map-marker-alt text-yellow-600"></i>Other
            </label>
          </div>
        </div>

        <div>
          <label for="district">City/Town</label>
          <input id="district" type="text" placeholder="Your city or town">
        </div>

        <div>
          <label for="state">State</label>
          <input id="state" type="text" placeholder="Your state">
        </div>

        <div class="col-span-2">
          <label for="fullAddress">Full Address</label>
          <textarea id="fullAddress" rows="3" placeholder="House number, street name, area..."></textarea>
        </div>

        <div>
          <label for="landmark">Landmark</label>
          <input id="landmark" type="text" placeholder="Nearby landmark (optional)">
        </div>

        <div>
          <label for="pincode">Pincode</label>
          <input id="pincode" type="text" placeholder="6-digit pincode">
        </div>
      </div>

      <!-- Contact Info -->
      <div class="border-t pt-6">
        <h3 class="text-base font-semibold mb-4 text-gray-800">Contact Information</h3>
        <div class="modal-grid">
          <div>
            <label for="phone">Phone Number</label>
            <input id="phone" type="text" placeholder="10-digit phone number">
          </div>
          <div>
            <label for="altPhone">Alternate Number</label>
            <input id="altPhone" type="text" placeholder="Alternate phone (optional)">
          </div>
          <div class="col-span-2">
            <label for="email">Email Address</label>
            <input id="email" type="email" placeholder="your.email@example.com">
          </div>
        </div>
      </div>
    </div>

    <!-- Submit Buttons -->
    <div class="flex justify-end gap-3 mt-6 pt-4 border-t border-gray-200">
      <button onclick="closeModal()" class="modal-btn modal-btn-secondary">
        <i class="fas fa-times mr-1"></i>Cancel
      </button>
      <button id="saveAddressBtn" class="modal-btn modal-btn-primary">
        <i class="fas fa-save mr-1"></i>Save Address
      </button>
    </div>
  </div>
</div>

<div id="toaster"></div>

<script>
// Fixed mobile sidebar functionality (Same as Profile Page)
document.addEventListener('DOMContentLoaded', function() {
  const mobileMenuToggle = document.getElementById('mobileMenuToggle');
  const sidebarOverlay = document.getElementById('sidebarOverlay');
  const mobileSidebar = document.getElementById('mobileSidebar');
  const closeSidebar = document.getElementById('closeSidebar');

  if (!mobileMenuToggle || !sidebarOverlay || !mobileSidebar || !closeSidebar) {
    console.warn('Some mobile sidebar elements are missing');
    return;
  }

  function openSidebar() {
    sidebarOverlay.classList.add('show');
    setTimeout(() => {
      mobileSidebar.classList.add('open');
    }, 50);
  }

  function closeSidebarFunc() {
    mobileSidebar.classList.remove('open');
    setTimeout(() => {
      sidebarOverlay.classList.remove('show');
    }, 300);
  }

  mobileMenuToggle.addEventListener('click', function(e) {
    e.preventDefault();
    e.stopPropagation();
    openSidebar();
  });

  closeSidebar.addEventListener('click', function(e) {
    e.preventDefault();
    e.stopPropagation();
    closeSidebarFunc();
  });

  sidebarOverlay.addEventListener('click', function(e) {
    if (e.target === sidebarOverlay) {
      closeSidebarFunc();
    }
  });

  const observer = new MutationObserver(function(mutations) {
    mutations.forEach(function(mutation) {
      if (mutation.type === 'attributes' && mutation.attributeName === 'class') {
        if (sidebarOverlay.classList.contains('show')) {
          document.body.style.overflow = 'hidden';
        } else {
          document.body.style.overflow = '';
        }
      }
    });
  });

  observer.observe(sidebarOverlay, {
    attributes: true,
    attributeFilter: ['class']
  });
});

// Address management functionality
function openModal() {
  document.getElementById('addressModal').classList.remove('hidden');
}

function closeModal() {
  document.getElementById('addressModal').classList.add('hidden');
  // Clear form
  document.getElementById('editingAddressId').value = '';
  document.getElementById('addressTitle').value = '';
  document.getElementById('district').value = '';
  document.getElementById('state').value = '';
  document.getElementById('fullAddress').value = '';
  document.getElementById('landmark').value = '';
  document.getElementById('pincode').value = '';
  document.getElementById('phone').value = '';
  document.getElementById('altPhone').value = '';
  document.getElementById('email').value = '';
  // Uncheck all radio buttons
  document.querySelectorAll('input[name="type"]').forEach(radio => radio.checked = false);
  // Clear errors
  document.querySelectorAll('.error-msg').forEach(el => el.remove());
}

document.querySelectorAll('.three-dot-btn').forEach(btn => {
  btn.addEventListener('click', (e) => {
    const dropdown = btn.nextElementSibling;
    document.querySelectorAll('.dropdown-menu').forEach(menu => {
      if (menu !== dropdown) menu.classList.add('hidden');
    });
    dropdown.classList.toggle('hidden');
  });
});

window.addEventListener('click', (e) => {
  if (!e.target.closest('.three-dot-btn')) {
    document.querySelectorAll('.dropdown-menu').forEach(menu => menu.classList.add('hidden'));
  }
});

// For edit modal
document.querySelectorAll(".edit-address").forEach(editBtn => {
  editBtn.addEventListener("click", (e) => {
    e.preventDefault();

    // Set values in modal fields
    document.getElementById("editingAddressId").value = editBtn.dataset.id;
    document.getElementById("addressTitle").value = editBtn.dataset.title;
    document.getElementById("district").value = editBtn.dataset.city;
    document.getElementById("state").value = editBtn.dataset.state;
    document.getElementById("fullAddress").value = editBtn.dataset.address;
    document.getElementById("landmark").value = editBtn.dataset.landmark;
    document.getElementById("pincode").value = editBtn.dataset.pincode;
    document.getElementById("phone").value = editBtn.dataset.phone;
    document.getElementById("altPhone").value = editBtn.dataset.altphone;
    document.getElementById("email").value = editBtn.dataset.email;

    // Set the radio button
    document.getElementById("typeHome").checked = editBtn.dataset.addresstype === 'home';
    document.getElementById("typeWork").checked = editBtn.dataset.addresstype === 'work';
    document.getElementById("typeOther").checked = editBtn.dataset.addresstype === 'other';

    // Open modal
    openModal();
  });
});

// Save address
document.getElementById("saveAddressBtn").addEventListener("click", async () => {
  const editingAddressId = document.getElementById("editingAddressId").value;
  const title = document.getElementById("addressTitle").value;
  const addressType = document.querySelector("input[name='type']:checked")?.value;
  const city = document.getElementById("district").value;
  const state = document.getElementById("state").value;
  const address = document.getElementById("fullAddress").value;
  const landmark = document.getElementById("landmark").value;
  const pincode = document.getElementById("pincode").value;
  const phone = document.getElementById("phone").value;
  const altPhone = document.getElementById("altPhone").value;
  const email = document.getElementById("email").value;

  const addressData = {
    id: editingAddressId,
    title,
    addressType,
    city,
    state,
    address,
    landmark,
    pincode,
    phone,
    altPhone,
    email
  };

  // Clear previous errors
  document.querySelectorAll(".error-msg").forEach(el => el.remove());

  try {
    const method = editingAddressId && editingAddressId.trim() !== "" ? "PUT" : "POST";
    const res = await fetch("/address", {
      method,
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(addressData)
    });

    const data = await res.json();

    if (res.ok && data.success) {
      showToaster(editingAddressId ? "Address updated successfully!" : "Address saved successfully!", 'success');
      closeModal();
      setTimeout(() => window.location.reload(), 1500);
    } else {
      if (data.errors) {
        displayValidationErrors(data.errors);
      } else {
        showToaster("Failed to " + (method === "PUT" ? "update" : "save") + " address: " + (data.message || "Unknown error"), 'error');
      }
    }
  } catch (err) {
    console.error("Error:", err);
    showToaster("Something went wrong!", 'error');
  }
});

function displayValidationErrors(errors) {
  for (let field in errors) {
    const element = document.getElementById(getFieldId(field));
    if (element) {
      const error = document.createElement("div");
      error.className = "error-msg text-sm text-red-500 mt-1";
      error.innerText = errors[field];
      element.parentNode.appendChild(error);
    }
  }
}

function getFieldId(fieldName) {
  const map = {
    title: "addressTitle",
    addressType: "typeHome",
    city: "district",
    state: "state",
    address: "fullAddress",
    landmark: "landmark",
    pincode: "pincode",
    phone: "phone",
    altPhone: "altPhone",
    email: "email"
  };
  return map[fieldName] || fieldName;
}

// Delete address
async function deleteAddress(addressId) {
  if (!confirm("Are you sure you want to delete this address?")) return;

  try {
    const res = await fetch(`/address/${addressId}`, {
      method: 'DELETE',
    });

    const data = await res.json();

    if (data.success) {
      showToaster("Address deleted successfully!", 'success');
      setTimeout(() => window.location.reload(), 1500);
    } else {
      showToaster("Failed to delete address: " + data.message, 'error');
    }
  } catch (err) {
    console.error("Error:", err);
    showToaster("Something went wrong!", 'error');
  }
}

function logout() {
  if (confirm('Are you sure you want to logout?')) {
    window.location.href = '/logout';
  }
}

// Toaster Message Function (Same as Profile Page)
function showToaster(message, type = 'success', duration = 3000) {
  const toaster = document.getElementById('toaster');
  toaster.textContent = message;

  toaster.className = '';
  toaster.classList.add('show', type);

  setTimeout(() => {
    toaster.classList.remove('show');
  }, duration);
}
</script>

<%- include('../../views/partials/user/footer') %>
